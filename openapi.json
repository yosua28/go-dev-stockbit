{
  "openapi": "3.0.2",
  "info": {
    "title": "MNC duit API",
    "description": "MNC duit API",
    "version": "0.1.0",
    "license": {
      "name": "Proprietary"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000"
    },
    {
      "url": "https://devapi.mncasset.com/api"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "description": "Register MNCDuit",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "ulogin_email": "riotesting92@gmail.com",
                    "ulogin_mobileno": "08388644366"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Email is not valid"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/verifyemail": {
      "post": {
        "description": "Verify email of LidoPlayer account",
        "tags": [
          "Session"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify email"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "Token is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/verifyotp": {
      "post": {
        "description": "Verify otp of MNCduit account",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string"
                  }
                },
                "required": [
                  "otp"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify mobile phone"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "OTP not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Login MNCDuit",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "session_id": "17hhoIH8sdUugW92bJBfpNaldkNLsd",
                    "email": "yogasutrisna@gmail.com",
                    "expired": "2006-01-02T15:04:05+00:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Login failed"
              }
            }
          }
        }
      }
    },
    "/resendverification": {
      "post": {
        "description": "Resend verification (email/otp)",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify send email/otp verification"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/posts/{field}/{key}": {
      "get": {
        "description": "Get Post",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "type",
                "subtype"
              ]
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "post type ker or post subtype key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_title",
                "post_publish_thru",
                "post_publish_start"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "post_type_key": 3,
                    "post_type_code": "NEWS",
                    "post_type_name": "News",
                    "post_type_desc": "Berbagai berita-berita",
                    "post_type_group": "HOME",
                    "post_list": [
                      {
                        "post_key": 2,
                        "post_subtype": {
                          "post_subtype_key": 1,
                          "post_subtype_code": "GENERAL",
                          "post_subtype_name": "Category General"
                        },
                        "post_title": "Investasi Jangan Hanya Mimpi",
                        "post_sub_title": "Wujudkan impian anda dengan mulai berinvestasi sebesar 100.00",
                        "post_content": "Investasi masa kini semakin mudah. MNC Asset Mnanagement menyediakan kemudahan untuk investasi bagi nasabah retail mulai dari 100.000",
                        "post_content_author": null,
                        "post_content_sources": null,
                        "post_publish_start": "31 Dec 2020",
                        "post_publish_thru": "31 Dec 2021",
                        "post_page_allowed": false,
                        "post_comment_allowed": false,
                        "post_comment_displayed": false,
                        "post_files_allowed": false,
                        "post_video_allowed": false,
                        "post_video_url": null,
                        "post_pinned": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/posts/{key}": {
      "get": {
        "description": "Get Post",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "post key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "post_key": 1,
                    "post_subtype": {
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner"
                    },
                    "post_title": "",
                    "post_sub_title": "",
                    "post_content": "",
                    "post_content_author": "QA",
                    "post_content_sources": "-",
                    "post_publish_start": "01 Jan 2020",
                    "post_publish_thru": "31 Dec 2500",
                    "post_page_allowed": false,
                    "post_comment_allowed": false,
                    "post_comment_displayed": false,
                    "post_files_allowed": false,
                    "post_video_allowed": false,
                    "post_video_url": "",
                    "post_pinned": true,
                    "rec_image1": "/ibanner1.jpg",
                    "rec_image2": "/banner1.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/product/{key}": {
      "get": {
        "description": "Get Product Detail",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "post key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                    "status": {
                      "code": 200,
                      "message_server": "OK",
                      "message_client": "OK"
                    },
                    "data": {
                      "product_key": 1,
                      "product_id": 5,
                      "product_code": "BDLC",
                      "product_name": "MNC DANA LANCAR",
                      "product_name_alt": "DANA LANCAR",
                      "min_sub_amount": 0,
                      "nav_performance": {
                        "nav_date": "21 Oct 2004",
                        "1d": "0.000%",
                        "mtd": "0.000%",
                        "1m": "0.000%",
                        "3m": "0.000%",
                        "6m": "0.000%",
                        "1y": "0.000%",
                        "3y": "0.000%",
                        "5y": "0.000%",
                        "ytd": "0.000%",
                        "cagr": "0.000%",
                        "all": "0.000%"
                      },
                      "nav": {
                        "nav_date": "30 Dec 2010",
                        "nav_value": 1000
                      },
                      "custodian_bank": {
                        "custodian_code": "ABNAMRO",
                        "custodian_short_name": "Bank ABN Amro",
                        "custodian_full_name": "Bank ABN Amro"
                      },
                      "risk_profile": {
                        "risk_code": "RendahMenengah",
                        "risk_name": "Konservatif Moderate",
                        "risk_desc": "Investor masih tetap mengutamakan tingkat keutuhan nilai pokok investasi, namun bersedia menerima fluktuasi investasi jangka pendek untuk mendapatkan hasil investasi."
                      }
                    }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/fundtype": {
      "get": {
        "description": "Get Fund Type",
        "tags": [
          "Fund Type"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "rec_order",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "fund_type_key": 1,
                      "fund_type_code": "MM",
                      "fund_type_name": "Money Market",
                      "fund_type_desc": "Money Market",
                      "rec_order": 0,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 2,
                      "fund_type_code": "FI",
                      "fund_type_name": "Fix Income",
                      "fund_type_desc": "Fix Income",
                      "rec_order": 1,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 3,
                      "fund_type_code": "BF",
                      "fund_type_name": "Balance Fund",
                      "fund_type_desc": "Balance Fund",
                      "rec_order": 2,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 4,
                      "fund_type_code": "EQ",
                      "fund_type_name": "Ekuitas",
                      "fund_type_desc": "Ekuitas",
                      "rec_order": 3,
                      "rec_image1": ""
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/nav/{duration}/{product_key}": {
      "get": {
        "description": "Get Nav",
        "tags": [
          "Nav"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "duration",
            "in": "path",
            "description": "duration code",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "d1",
                "m1",
                "m3",
                "y1",
                "y3",
                "y3",
                "ytd",
                "all"
              ]
            }
          },
          {
            "name": "product_key",
            "in": "path",
            "description": "Product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "nav_date": "02 Jan 2006",
                      "nav_value": "1.043,92"
                    },
                    {
                      "nav_date": "03 Jan 2006",
                      "nav_value": "1.051,92"
                    },
                    {
                      "nav_date": "04 Jan 2006",
                      "nav_value": "1.054,92"
                    },
                    {
                      "nav_date": "05 Jan 2006",
                      "nav_value": "1.058,92"
                    },
                    {
                      "nav_date": "06 Jan 2006",
                      "nav_value": "1.046,92"
                    },
                    {
                      "nav_date": "09 Jan 2006",
                      "nav_value": "1.053,92"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/product": {
      "get": {
        "description": "Get Product based on fund type",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "fund_type",
            "in": "query",
            "description": "fund type key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_title",
                "post_publish_thru",
                "post_publish_start"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "product_key": 1,
                      "product_id": 5,
                      "product_code": "BDLC",
                      "product_name": "MNC DANA LANCAR",
                      "product_name_alt": "DANA LANCAR",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "21 Oct 2004",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "30 Dec 2010",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 18,
                      "product_id": 204,
                      "product_code": "MNCSBAR",
                      "product_name": "REKSA DANA SYARIAH MNC DANA SYARIAH BAROKAH",
                      "product_name_alt": "DANA SYARIAH BAROKAH",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "21 Mar 2016",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "21 Mar 2016",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 32,
                      "product_id": 221,
                      "product_code": "MNCDPUII",
                      "product_name": "REKSA DANA MNC DANA PASAR UANG II",
                      "product_name_alt": "DANA PASAR UANG II",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "22 Aug 2017",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "22 Aug 2017",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 35,
                      "product_id": 225,
                      "product_code": "MNCDPU",
                      "product_name": "REKSA DANA MNC DANA PASAR UANG",
                      "product_name_alt": "DANA PASAR UANG",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "27 Oct 2017",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "27 Oct 2017",
                        "nav_value": 1000
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Custom"
      }
    }
  }
}