{
  "openapi": "3.0.2",
  "info": {
    "title": "MNC duit API",
    "description": "MNC duit API",
    "version": "0.1.0",
    "license": {
      "name": "Proprietary"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8000"
    },
    {
      "url": "https://devapi.mncasset.com/api"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "description": "Register MNCDuit",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "ulogin_email": "riotesting92@gmail.com",
                    "ulogin_mobileno": "08388644366"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Email is not valid"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/verifyemail": {
      "get": {
        "description": "Verify email of MNC duit account",
        "tags": [
          "Session"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify email"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "Token is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/verifyotp": {
      "post": {
        "description": "Verify otp of MNCduit account",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string"
                  }
                },
                "required": [
                  "otp"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify mobile phone"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "OTP not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Login MNCDuit",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "session_id": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDIwNjIyMjAsIm9hX3N0YXR1cyI6Ik9BIEVOVFJJRUQiLCJyb2xlX2NhdGVnb3J5X2tleSI6MSwicm9sZV9rZXkiOjEsInV1aWQiOiIzZGIzMzUzZC1jYzU5LTQ5ZjYtYWEwNC0zNzE0YjYxODAwZDEifQ.XnJVpSqz8cgN0oR7DHr5069yYJA_KGUvHJgGnl-FKhE",
                    "must_change_password": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Login failed"
              }
            }
          }
        }
      }
    },
    "/loginbo": {
      "post": {
        "description": "Login MNCDuit Back Office (BO)",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "session_id": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MDIwNjIyMjAsIm9hX3N0YXR1cyI6Ik9BIEVOVFJJRUQiLCJyb2xlX2NhdGVnb3J5X2tleSI6MSwicm9sZV9rZXkiOjEsInV1aWQiOiIzZGIzMzUzZC1jYzU5LTQ5ZjYtYWEwNC0zNzE0YjYxODAwZDEifQ.XnJVpSqz8cgN0oR7DHr5069yYJA_KGUvHJgGnl-FKhE",
                    "must_change_password": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Login failed"
              }
            }
          }
        }
      }
    },
    "/resendverification": {
      "post": {
        "description": "Resend verification (email/otp)",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify send email/otp verification"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/forgotpassword": {
      "post": {
        "description": "Forgot PAssword",
        "tags": [
          "Session"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": "Success verify send email/otp verification"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "description": "Get user data",
        "tags": [
          "Session"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "user_id": 7,
                    "email": "yogasutrisna902@gmail.com",
                    "phone_number": "08388644363",
                    "role_key": 1,
                    "role_category_key": 1,
                    "rec_image1": "https://devapi.mncasset.com/user/default.png"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/portofolio": {
      "get": {
        "description": "Get portofolio",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "imba": "83.056%",
                    "net_sub": 950000,
                    "product": [
                      {
                        "invest_value": 789036.3,
                        "percent": "100.000%",
                        "product_code": "BDLC",
                        "product_id": 5,
                        "product_key": 1,
                        "product_name": "DANA LANCAR",
                        "product_name_alt": "DANA LANCAR",
                        "rec_image1": "https://devapi.mncasset.com/images/product/bdlc.jpg"
                      }
                    ],
                    "total_invest": 789036.3
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/productlist": {
      "get": {
        "description": "Get product list for transaction history",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "status": {
              "code": 200,
              "message_server": "OK",
              "message_client": "OK"
            },
            "data": [
              {
                "product_code": "BDLC",
                "product_id": 5,
                "product_key": 1,
                "product_name": "DANA LANCAR",
                "product_name_alt": "DANA LANCAR"
              }
            ]
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/changepassword": {
      "put": {
        "description": "Change password",
        "tags": [
          "Session"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "recent_password": {
                    "type": "string"
                  },
                  "new_password1": {
                    "type": "string"
                  },
                  "new_password2": {
                    "type": "string"
                  }
                },
                "required": [
                  "recent_password",
                  "new_password1",
                  "new_password2"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Email is not valid"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/servertime": {
      "get": {
        "description": "Curent server time",
        "tags": [
          "Session"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": "2020-11-09 05:30:54"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/city/{field}/{key}": {
      "get": {
        "description": "Get City",
        "tags": [
          "City"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "field",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "parent_key",
                "city_level"
              ]
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "parent key or city level",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "city_key": 3,
                      "parent_key": 0,
                      "city_code": "WIB",
                      "city_name": "WIB",
                      "city_level": 1,
                      "postal_code": ""
                    },
                    {
                      "city_key": 1,
                      "parent_key": 0,
                      "city_code": "WIT",
                      "city_name": "WIT",
                      "city_level": 1,
                      "postal_code": ""
                    },
                    {
                      "city_key": 2,
                      "parent_key": 0,
                      "city_code": "WITA",
                      "city_name": "WITA",
                      "city_level": 1,
                      "postal_code": ""
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/posts/{field}/{key}": {
      "get": {
        "description": "Get Post",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "field",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "type",
                "subtype"
              ]
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "post type ker or post subtype key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_title",
                "post_publish_thru",
                "post_publish_start"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "post_type_key": 3,
                    "post_type_code": "NEWS",
                    "post_type_name": "News",
                    "post_type_desc": "Berbagai berita-berita",
                    "post_type_group": "HOME",
                    "post_list": [
                      {
                        "post_key": 2,
                        "post_subtype": {
                          "post_subtype_key": 1,
                          "post_subtype_code": "GENERAL",
                          "post_subtype_name": "Category General"
                        },
                        "post_title": "Investasi Jangan Hanya Mimpi",
                        "post_sub_title": "Wujudkan impian anda dengan mulai berinvestasi sebesar 100.00",
                        "post_content": "Investasi masa kini semakin mudah. MNC Asset Mnanagement menyediakan kemudahan untuk investasi bagi nasabah retail mulai dari 100.000",
                        "post_content_author": null,
                        "post_content_sources": null,
                        "post_publish_start": "31 Dec 2020",
                        "post_publish_thru": "31 Dec 2021",
                        "post_page_allowed": false,
                        "post_comment_allowed": false,
                        "post_comment_displayed": false,
                        "post_files_allowed": false,
                        "post_video_allowed": false,
                        "post_video_url": null,
                        "post_pinned": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/oarequest": {
      "post": {
        "description": "Create Request",
        "tags": [
          "Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string"
                  },
                  "idcard_type": {
                    "type": "integer"
                  },
                  "place_birth": {
                    "type": "string"
                  },
                  "date_birth": {
                    "type": "string",
                    "example": "2017-10-30"
                  },
                  "nationality": {
                    "type": "integer"
                  },
                  "idcard_number": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "integer"
                  },
                  "marital_status": {
                    "type": "integer"
                  },
                  "address_idcard": {
                    "type": "string"
                  },
                  "kabupaten_idcard": {
                    "type": "integer"
                  },
                  "kecamatan_idcard": {
                    "type": "integer"
                  },
                  "postal_idcard": {
                    "type": "string"
                  },
                  "address_domicile": {
                    "type": "string"
                  },
                  "kabupaten_domicile": {
                    "type": "integer"
                  },
                  "kecamatan_domicile": {
                    "type": "integer"
                  },
                  "postal_domicile": {
                    "type": "string"
                  },
                  "phone_home": {
                    "type": "string"
                  },
                  "phone_mobile": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "religion": {
                    "type": "integer"
                  },
                  "education": {
                    "type": "integer"
                  },
                  "pic_ktp": {
                    "type": "file"
                  },
                  "pic_selfie_ktp": {
                    "type": "file"
                  },
                  "job": {
                    "type": "integer"
                  },
                  "company": {
                    "type": "string"
                  },
                  "position": {
                    "type": "integer"
                  },
                  "company_address": {
                    "type": "string"
                  },
                  "business_field": {
                    "type": "integer"
                  },
                  "annual_income": {
                    "type": "integer"
                  },
                  "fund_source": {
                    "type": "integer"
                  },
                  "objectives": {
                    "type": "integer"
                  },
                  "corespondence": {
                    "type": "integer"
                  },
                  "relation_name": {
                    "type": "string"
                  },
                  "relation_occupation": {
                    "type": "integer"
                  },
                  "relation_business_field": {
                    "type": "integer"
                  },
                  "mother_maiden_name": {
                    "type": "string"
                  },
                  "emergency_name": {
                    "type": "string"
                  },
                  "emergency_relation": {
                    "type": "integer"
                  },
                  "emergency_phone": {
                    "type": "string"
                  },
                  "beneficial_name": {
                    "type": "string"
                  },
                  "beneficial_relation": {
                    "type": "integer"
                  },
                  "bank_key": {
                    "type": "integer"
                  },
                  "account_no": {
                    "type": "string"
                  },
                  "account_name": {
                    "type": "string"
                  },
                  "branch_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "request_key": "1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/createtransaction": {
      "post": {
        "description": "Create Transaction",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_key": {
                    "type": "integer"
                  },
                  "type_key": {
                    "type": "integer",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4"
                    ]
                  },
                  "redem_all": {
                    "type": "integer",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "parent_key": {
                    "type": "integer"
                  },
                  "trans_unit": {
                    "type": "number"
                  },
                  "trans_amount": {
                    "type": "number"
                  },
                  "trans_fee_percent": {
                    "type": "number"
                  },
                  "trans_fee_amount": {
                    "type": "number"
                  },
                  "charges_fee_amount": {
                    "type": "number"
                  },
                  "services_fee_amount": {
                    "type": "number"
                  },
                  "total_amount": {
                    "type": "number"
                  },
                  "trans_source": {
                    "type": "integer"
                  },
                  "risk_waiver": {
                    "type": "integer",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "trans_remarks": {
                    "type": "string"
                  },
                  "transfer_pic": {
                    "type": "file"
                  }
                },
                "required": [
                  "product_key",
                  "trans_amount",
                  "trans_fee_percent",
                  "trans_fee_amount",
                  "charges_fee_amount",
                  "services_fee_amount",
                  "total_amount",
                  "trans_source",
                  "risk_waiver",
                  "type_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "request_key": "1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/uploadtransferpic": {
      "post": {
        "description": "Upload transfer pic",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_key": {
                    "type": "integer"
                  },
                  "trans_remarks": {
                    "type": "string"
                  },
                  "transfer_pic": {
                    "type": "file"
                  }
                },
                "required": [
                  "transaction_key",
                  "transfer_pic"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "request_key": "1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/uploadprofilepic": {
      "post": {
        "description": "Upload profile pic",
        "tags": [
          "Session"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pic": {
                    "type": "file"
                  }
                },
                "required": [
                  "transfer_pic"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "request_key": "1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/posts/{key}": {
      "get": {
        "description": "Get Post",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "post key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "post_key": 1,
                    "post_subtype": {
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner"
                    },
                    "post_title": "",
                    "post_sub_title": "",
                    "post_content": "",
                    "post_content_author": "QA",
                    "post_content_sources": "-",
                    "post_publish_start": "01 Jan 2020",
                    "post_publish_thru": "31 Dec 2500",
                    "post_page_allowed": false,
                    "post_comment_allowed": false,
                    "post_comment_displayed": false,
                    "post_files_allowed": false,
                    "post_video_allowed": false,
                    "post_video_url": "",
                    "post_pinned": true,
                    "rec_image1": "/ibanner1.jpg",
                    "rec_image2": "/banner1.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/product/{key}": {
      "get": {
        "description": "Get Product Detail",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "product_key": 1,
                    "product_id": 5,
                    "product_code": "BDLC",
                    "product_name": "MNC DANA LANCAR",
                    "product_name_alt": "DANA LANCAR",
                    "min_sub_amount": 0,
                    "is_new": false,
                    "nav_performance": {
                      "nav_date": "21 Oct 2004",
                      "1d": "0.000%",
                      "mtd": "0.000%",
                      "1m": "0.000%",
                      "3m": "0.000%",
                      "6m": "0.000%",
                      "1y": "0.000%",
                      "3y": "0.000%",
                      "5y": "0.000%",
                      "ytd": "0.000%",
                      "cagr": "0.000%",
                      "all": "0.000%"
                    },
                    "nav": {
                      "nav_date": "30 Dec 2010",
                      "nav_value": 1000
                    },
                    "custodian_bank": {
                      "custodian_code": "ABNAMRO",
                      "custodian_short_name": "Bank ABN Amro",
                      "custodian_full_name": "Bank ABN Amro"
                    },
                    "risk_profile": {
                      "risk_code": "RendahMenengah",
                      "risk_name": "Konservatif Moderate",
                      "risk_desc": "Investor masih tetap mengutamakan tingkat keutuhan nilai pokok investasi, namun bersedia menerima fluktuasi investasi jangka pendek untuk mendapatkan hasil investasi."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/fundtype": {
      "get": {
        "description": "Get Fund Type",
        "tags": [
          "Fund Type"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "rec_order",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "fund_type_key": 1,
                      "fund_type_code": "MM",
                      "fund_type_name": "Money Market",
                      "fund_type_desc": "Money Market",
                      "rec_order": 0,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 2,
                      "fund_type_code": "FI",
                      "fund_type_name": "Fix Income",
                      "fund_type_desc": "Fix Income",
                      "rec_order": 1,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 3,
                      "fund_type_code": "BF",
                      "fund_type_name": "Balance Fund",
                      "fund_type_desc": "Balance Fund",
                      "rec_order": 2,
                      "rec_image1": ""
                    },
                    {
                      "fund_type_key": 4,
                      "fund_type_code": "EQ",
                      "fund_type_name": "Ekuitas",
                      "fund_type_desc": "Ekuitas",
                      "rec_order": 3,
                      "rec_image1": ""
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/investpurpose": {
      "get": {
        "description": "Get Invest Purpose List",
        "tags": [
          "Invest"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "rec_order",
                "purpose_code",
                "purpose_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "invest_purpose_key": 1,
                      "purpose_code": "Education",
                      "purpose_name": "Education",
                      "purpose_desc": "Pendidikan"
                    },
                    {
                      "invest_purpose_key": 2,
                      "purpose_code": "Recidence",
                      "purpose_name": "Recidence",
                      "purpose_desc": "Tempat Tinggal"
                    },
                    {
                      "invest_purpose_key": 3,
                      "purpose_code": "Transport",
                      "purpose_name": "Transport",
                      "purpose_desc": "Transaport or Travelling"
                    },
                    {
                      "invest_purpose_key": 4,
                      "purpose_code": "Vacation",
                      "purpose_name": "Vacation",
                      "purpose_desc": "Vacation liburan"
                    },
                    {
                      "invest_purpose_key": 5,
                      "purpose_code": "Wedding",
                      "purpose_name": "Wedding",
                      "purpose_desc": "Menikah"
                    },
                    {
                      "invest_purpose_key": 6,
                      "purpose_code": "Other",
                      "purpose_name": "Other",
                      "purpose_desc": "Lainya"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/investpartner": {
      "get": {
        "description": "Get Invest Partner List",
        "tags": [
          "Invest"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "purpose_key",
            "in": "query",
            "description": "Purpose key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "invest_partner_key": 1,
                      "partner_code": "STIEMNC",
                      "partner_business_name": "STIE MNC",
                      "partner_url": "http://www.mnccollege.edu",
                      "rec_image1": "https://devapi.mncasset.com/images/partner/default.png"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/quizresult": {
      "post": {
        "description": "Post quiz result",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/quiz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "risk_code": "MenengahTinggi",
                    "risk_name": "Moderate Agresif",
                    "risk_desc": "Investor mulai mencoba alternatif untuk mendapatkan hasil investasi yang relatif tinggi dan risiko fluktuasi investasi yang juga relatif tinggi.",
                    "score": 40
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/lookup": {
      "get": {
        "description": "Get Lookup Data",
        "tags": [
          "Lookup"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "group_key",
            "in": "query",
            "description": "group_key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "group_name": "Boolean",
                      "lookup": [
                        {
                          "name": "No",
                          "value": "No"
                        },
                        {
                          "name": "Yes",
                          "value": "Yes"
                        }
                      ]
                    },
                    {
                      "group_name": "Record status",
                      "lookup": [
                        {
                          "name": "InActive",
                          "value": "InActive"
                        },
                        {
                          "name": "Active",
                          "value": "Active"
                        }
                      ]
                    },
                    {
                      "group_name": "Approval Status",
                      "lookup": [
                        {
                          "name": "Waiting",
                          "value": "Waiting"
                        },
                        {
                          "name": "Approved",
                          "value": "Approved"
                        },
                        {
                          "name": "Reject",
                          "value": "Reject"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/quiz": {
      "get": {
        "description": "Get Quiz Data",
        "tags": [
          "Quiz"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type_key",
            "in": "query",
            "description": "type_key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "quiz_header_key": 1,
                    "quiz_name": "Survey Pengenalan RD",
                    "quiz_desc": "Mengetahui apakah visitor kenal porduk RD",
                    "questions": [
                      {
                        "quiz_question_key": 1,
                        "quiz_title": "Seberapa jauh Anda kenal Reksadana",
                        "file_image_allowed": false,
                        "quiz_opetion_type": "MULTIPLE_CHOICE",
                        "quiz_opetion_default": "",
                        "options": [
                          {
                            "quiz_option_key": 1,
                            "quiz_option_label": "A",
                            "quiz_option_title": "Belum mengenal",
                            "quiz_option_score": 0,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 2,
                            "quiz_option_label": "B",
                            "quiz_option_title": "Sedikit mengenal",
                            "quiz_option_score": 1,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 3,
                            "quiz_option_label": "C",
                            "quiz_option_title": "Sangat mengenal",
                            "quiz_option_score": 2,
                            "quiz_option_default": 0
                          }
                        ]
                      },
                      {
                        "quiz_question_key": 2,
                        "quiz_title": "Apakah Anda sudah memiliki Reksadana?",
                        "file_image_allowed": false,
                        "quiz_opetion_type": "MULTIPLE_CHOICE",
                        "quiz_opetion_default": "",
                        "options": [
                          {
                            "quiz_option_key": 4,
                            "quiz_option_label": "A",
                            "quiz_option_title": "Belum",
                            "quiz_option_score": 0,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 5,
                            "quiz_option_label": "B",
                            "quiz_option_title": "Sudah",
                            "quiz_option_score": 1,
                            "quiz_option_default": 0
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/mailportofolio": {
      "get": {
        "description": "Mail Portofolio",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/mailtransaction": {
      "get": {
        "description": "Mail Transaction",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_key",
            "in": "query",
            "description": "product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "transaction date start from",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2017-10-30"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "end date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2017-10-30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/bank": {
      "get": {
        "description": "Get Bank Data",
        "tags": [
          "Bank"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "bank_key": 1,
                      "bank_code": "ABNAIDJA",
                      "bank_name": "ABN AMRO",
                      "bank_fullname": "ABN AMRO"
                    },
                    {
                      "bank_key": 2,
                      "bank_code": "ANTDIDJD",
                      "bank_name": "ANTAR DAERAH",
                      "bank_fullname": "ANTAR DAERAH"
                    },
                    {
                      "bank_key": 3,
                      "bank_code": "ANZBIDJX",
                      "bank_name": "ANZ BANK",
                      "bank_fullname": "ANZ BANK"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/country": {
      "get": {
        "description": "Get Country Data",
        "tags": [
          "Country"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "country_key": 14,
                      "cou_code": "AU",
                      "cou_name": "Australia"
                    },
                    {
                      "country_key": 91,
                      "cou_code": "HK",
                      "cou_name": "Hong Kong"
                    },
                    {
                      "country_key": 97,
                      "cou_code": "ID",
                      "cou_name": "Indonesia"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/posttype": {
      "get": {
        "description": "Get Post Type",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_type_key",
                "post_type_code",
                "post_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "post_type_key": 1,
                      "post_type_code": "POSTER",
                      "post_type_name": "Jumbotron",
                      "post_type_desc": "Poster atau Banner di halaman HOME",
                      "post_type_group": "",
                      "subtype": [
                        {
                          "post_subtype_key": 1,
                          "post_subtype_code": "JUMBOTRON",
                          "post_subtype_name": "Top Home Banner"
                        },
                        {
                          "post_subtype_key": 2,
                          "post_subtype_code": "POSTER_SMALL",
                          "post_subtype_name": "Banner Kecil"
                        },
                        {
                          "post_subtype_key": 3,
                          "post_subtype_code": "POSTER_PARTNER",
                          "post_subtype_name": "Banner Partner Business"
                        }
                      ]
                    },
                    {
                      "post_type_key": 2,
                      "post_type_code": "GUIDANCE",
                      "post_type_name": "Panduan Investasi",
                      "post_type_desc": "Panduan Investasi",
                      "post_type_group": "",
                      "subtype": [
                        {
                          "post_subtype_key": 4,
                          "post_subtype_code": "HOWTOREG",
                          "post_subtype_name": "Panduan Registrasi"
                        },
                        {
                          "post_subtype_key": 5,
                          "post_subtype_code": "HOWTOOPENACC",
                          "post_subtype_name": "Panduan Pembukaan Rekening"
                        },
                        {
                          "post_subtype_key": 6,
                          "post_subtype_code": "HOWTOTRANSACT",
                          "post_subtype_name": "Panduan Transaksi"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/nav/{duration}/{product_key}": {
      "get": {
        "description": "Get Nav",
        "tags": [
          "Nav"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "duration",
            "in": "path",
            "description": "duration code",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "d1",
                "m1",
                "m3",
                "y1",
                "y3",
                "y3",
                "ytd",
                "all"
              ]
            }
          },
          {
            "name": "product_key",
            "in": "path",
            "description": "Product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "nav_date": "02 Jan 2006",
                      "nav_value": "1.043,92"
                    },
                    {
                      "nav_date": "03 Jan 2006",
                      "nav_value": "1.051,92"
                    },
                    {
                      "nav_date": "04 Jan 2006",
                      "nav_value": "1.054,92"
                    },
                    {
                      "nav_date": "05 Jan 2006",
                      "nav_value": "1.058,92"
                    },
                    {
                      "nav_date": "06 Jan 2006",
                      "nav_value": "1.046,92"
                    },
                    {
                      "nav_date": "09 Jan 2006",
                      "nav_value": "1.053,92"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/product": {
      "get": {
        "description": "Get Product based on fund type",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "fund_type",
            "in": "query",
            "description": "fund type key",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "transaction",
            "in": "query",
            "description": "transaction",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "sub",
                "red"
              ]
            }
          },
          {
            "name": "except",
            "in": "query",
            "description": "exception product key",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_title",
                "post_publish_thru",
                "post_publish_start",
                "cagr",
                "y5",
                "y3",
                "y1",
                "ytd",
                "m6",
                "m3"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "product_key": 1,
                      "product_id": 5,
                      "product_code": "BDLC",
                      "product_name": "MNC DANA LANCAR",
                      "product_name_alt": "DANA LANCAR",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "21 Oct 2004",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "30 Dec 2010",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 18,
                      "product_id": 204,
                      "product_code": "MNCSBAR",
                      "product_name": "REKSA DANA SYARIAH MNC DANA SYARIAH BAROKAH",
                      "product_name_alt": "DANA SYARIAH BAROKAH",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "21 Mar 2016",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "21 Mar 2016",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 32,
                      "product_id": 221,
                      "product_code": "MNCDPUII",
                      "product_name": "REKSA DANA MNC DANA PASAR UANG II",
                      "product_name_alt": "DANA PASAR UANG II",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "22 Aug 2017",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "22 Aug 2017",
                        "nav_value": 1000
                      }
                    },
                    {
                      "product_key": 35,
                      "product_id": 225,
                      "product_code": "MNCDPU",
                      "product_name": "REKSA DANA MNC DANA PASAR UANG",
                      "product_name_alt": "DANA PASAR UANG",
                      "min_sub_amount": 0,
                      "fund_type": {
                        "fund_type_key": 1,
                        "fund_type_code": "MM",
                        "fund_type_name": "Money Market"
                      },
                      "nav_performance": {
                        "nav_date": "27 Oct 2017",
                        "1d": "0.000",
                        "mtd": "0.000",
                        "1m": "0.000",
                        "3m": "0.000",
                        "6m": "0.000",
                        "1y": "0.000",
                        "3y": "0.000",
                        "5y": "0.000",
                        "ytd": "0.000",
                        "cagr": "0.000",
                        "all": "0.000"
                      },
                      "nav": {
                        "nav_date": "27 Oct 2017",
                        "nav_value": 1000
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/auth/message": {
      "get": {
        "description": "Get message list",
        "tags": [
          "Message"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "umessage_key": 9,
                      "umessage_type": {
                        "name": "Notification",
                        "value": 245
                      },
                      "umessage_receipt_date": "2020-10-08 18:03:36",
                      "flag_read": 0,
                      "umessage_subject": "Pembuatan Akun DUIT",
                      "umessage_category": {
                        "name": "System Notification",
                        "value": 248
                      }
                    },
                    {
                      "umessage_key": 10,
                      "umessage_type": {
                        "name": "Notification",
                        "value": 245
                      },
                      "umessage_receipt_date": "2020-10-08 18:06:20",
                      "flag_read": 0,
                      "umessage_subject": "Pembuatan Akun DUIT",
                      "umessage_category": {
                        "name": "System Notification",
                        "value": 248
                      }
                    },
                    {
                      "umessage_key": 17,
                      "umessage_type": {
                        "name": "Notification",
                        "value": 245
                      },
                      "umessage_receipt_date": "2020-10-08 18:31:57",
                      "flag_read": 0,
                      "umessage_subject": "Pembuatan Akun DUIT",
                      "umessage_category": {
                        "name": "System Notification",
                        "value": 248
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/message/{key}": {
      "get": {
        "description": "Get message list",
        "tags": [
          "Message"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Message key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "umessage_key": 9,
                    "umessage_type": {
                      "name": "Notification",
                      "value": 245
                    },
                    "umessage_receipt_date": "2020-10-08 18:03:36",
                    "flag_read": 0,
                    "umessage_subject": "Pembuatan Akun DUIT",
                    "umessage_body": "Selamat !!! User anda telah disetujui dan sekarang anda telah menjadi Customer.",
                    "uparent_key": null,
                    "umessage_category": {
                      "name": "System Notification",
                      "value": 248
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/patchmessage": {
      "patch": {
        "description": "Get message list",
        "tags": [
          "Message"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "read": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "required": [
                  "key",
                  "read"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "example": "OTP is expired"
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Email not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error get email"
              }
            }
          }
        }
      }
    },
    "/auth/transaction": {
      "get": {
        "description": "Get Transaction List",
        "tags": [
          "Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "product_key",
            "in": "query",
            "description": "product key",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "transaction status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "posted",
                "process"
              ]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "transaction date start from",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2017-10-30"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "end date",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2017-10-30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "transaction_key": 5,
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "POSTED",
                      "trans_date": "2020-10-19 16:49:39.000000",
                      "trans_type": "SUB",
                      "nav_date": "2020-04-07 00:00:00",
                      "nav_value": 1058.49,
                      "trans_amount": 1000000,
                      "trans_unit": 500,
                      "total_amount": 1012500,
                      "uploaded": true,
                      "date_uploaded": "2020-10-19 16:51:13",
                      "bank_name": null,
                      "bank_accno": null,
                      "bankacc_name": null,
                      "product_name_out": null,
                      "product_name_in": null
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/oarequestlist": {
      "get": {
        "description": "Get All OA Request (User Allowed : RoleKey 11 & 12)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "oa_request_key",
                "oa_request_type",
                "oa_entry_start",
                "oa_entry_end",
                "oa_status",
                "rec_order",
                "rec_status"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "oa_request_key": 2,
                      "oa_entry_start": "01 Jan 2020",
                      "oa_entry_end": "01 Jan 2020",
                      "oa_status": "Waiting",
                      "email_address": "yosua@mnc.com",
                      "phone_mobile": "081353455",
                      "date_birth": "2020-08-04 13:01:33",
                      "full_name": "Yosua",
                      "idcard_no": "6543543534"
                    },
                    {
                      "oa_request_key": 1,
                      "oa_entry_start": "01 Jan 2020",
                      "oa_entry_end": "01 Jan 2020",
                      "oa_status": "Waiting",
                      "email_address": "",
                      "phone_mobile": "",
                      "date_birth": "",
                      "full_name": "",
                      "idcard_no": ""
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/oarequestdata/{key}": {
      "get": {
        "description": "Get OA Request by OaRequestKey (User Allowed : RoleKey 11 & 12)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "oa request key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "oa_request_key": 17,
                    "oa_request_type": "NEW",
                    "oa_risk_level": "Risiko Tinggi",
                    "oa_entry_start": "08 Oct 2020",
                    "oa_entry_end": "08 Oct 2020",
                    "oa_status": "KYC_APPROVED",
                    "email_address": "aldy.alfianta@mncgroup.com",
                    "phone_mobile": "085328481220",
                    "date_birth": "25 Oct 1996",
                    "full_name": "Aldy Yoga",
                    "idcard_no": "3403162510960003",
                    "nationality": "Indonesia",
                    "gender": "Pria",
                    "place_birth": "Gunungkidul",
                    "marital_status": "Lajang ",
                    "phone_home": "021532846",
                    "religion": "Islam",
                    "education": "Sarjana S1",
                    "pic_ktp": "https://devapi.mncasset.com/images/user/44/gqHqiQGSbvPhtiHbJ0ec.png",
                    "pic_selfie": null,
                    "pic_selfie_ktp": "https://devapi.mncasset.com/images/user/44/5BAHhHhzzmJanACsFpQP.649023",
                    "occup_job": "Karyawan Swasta",
                    "occup_company": "MNC",
                    "occup_position": "Staff atau officer",
                    "occup_phone": null,
                    "occup_web_url": null,
                    "annual_income": "< Rp 10 Juta",
                    "sourceof_fund": "Gaji",
                    "invesment_objectives": "Investasi Jangka Panjang",
                    "correspondence": "Teman",
                    "mother_maiden_name": "rina",
                    "beneficial_relation": "Suami/Istri",
                    "beneficial_full_name": "heru",
                    "occup_business_fields": "Lainnya",
                    "idcard_address": {
                      "address": "tileng, girisubo",
                      "kabupaten": "Kota Yogyakarta",
                      "kecamatan": "Kotagede",
                      "postal_code": "5583"
                    },
                    "domicile_address": {
                      "address": "tileng, girisubo",
                      "kabupaten": "Kota Yogyakarta",
                      "kecamatan": "Kotagede",
                      "postal_code": null
                    },
                    "occup_address_key": {
                      "address": "kebon sirih",
                      "kabupaten": null,
                      "kecamatan": null,
                      "postal_code": null
                    },
                    "bank_account": {
                      "bank_name": "BANK MANDIRI",
                      "account_no": "1462576464",
                      "account_holder_name": "heru",
                      "branch_name": "jogjakarta"
                    },
                    "relation": {
                      "relation_type": null,
                      "relation_full_name": "heru",
                      "relation_occupation": "Pensiunan",
                      "relation_business_fields": "Lainnya"
                    },
                    "emergency": {
                      "emergency_full_name": "heru",
                      "emergency_relation": "Orangtua",
                      "emergency_phone_no": "08536843484"
                    },
                    "risk_profile": [
                      {
                        "oa_risk_profile_key": 12,
                        "risk_profile_key": 2,
                        "risk_code": "RendahMenengah",
                        "risk_name": "Konservatif Moderate",
                        "risk_desc": "Investor masih tetap mengutamakan tingkat keutuhan nilai pokok investasi, namun bersedia menerima fluktuasi investasi jangka pendek untuk mendapatkan hasil investasi.",
                        "min_score": 41,
                        "max_score": 65,
                        "score_result": 61
                      }
                    ],
                    "risk_profile_quiz": [
                      {
                        "risk_profile_quiz_key": 65,
                        "quiz_option_user": {
                          "quiz_option_key": 2,
                          "quiz_option_label": "B",
                          "quiz_option_title": "Sedikit mengenal",
                          "quiz_option_score": 1,
                          "quiz_option_default": 0
                        },
                        "quiz_option_score_user": 1,
                        "quiz_question_key": 1,
                        "header_quiz_name": "Survey Pengenalan RD",
                        "quiz_title": "Seberapa jauh Anda kenal Reksadana",
                        "options": [
                          {
                            "quiz_option_key": 1,
                            "quiz_option_label": "A",
                            "quiz_option_title": "Belum mengenal",
                            "quiz_option_score": 0,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 2,
                            "quiz_option_label": "B",
                            "quiz_option_title": "Sedikit mengenal",
                            "quiz_option_score": 1,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 3,
                            "quiz_option_label": "C",
                            "quiz_option_title": "Sangat mengenal",
                            "quiz_option_score": 2,
                            "quiz_option_default": 0
                          }
                        ]
                      },
                      {
                        "risk_profile_quiz_key": 66,
                        "quiz_option_user": {
                          "quiz_option_key": 4,
                          "quiz_option_label": "A",
                          "quiz_option_title": "Belum",
                          "quiz_option_score": 0,
                          "quiz_option_default": 0
                        },
                        "quiz_option_score_user": 0,
                        "quiz_question_key": 2,
                        "header_quiz_name": "Survey Pengenalan RD",
                        "quiz_title": "Apakah Anda sudah memiliki Reksadana?",
                        "options": [
                          {
                            "quiz_option_key": 4,
                            "quiz_option_label": "A",
                            "quiz_option_title": "Belum",
                            "quiz_option_score": 0,
                            "quiz_option_default": 0
                          },
                          {
                            "quiz_option_key": 5,
                            "quiz_option_label": "B",
                            "quiz_option_title": "Sudah",
                            "quiz_option_score": 1,
                            "quiz_option_default": 0
                          }
                        ]
                      }
                    ],
                    "first_name": "Aldy",
                    "middle_name": "Yoga",
                    "last_name": "Putra",
                    "client_code": null,
                    "tin_number": null,
                    "tin_issuance_date": null,
                    "tin_issuance_country": null,
                    "fatca_status": "Domestic (WNA)"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/updatestatusapproval/cs": {
      "post": {
        "description": "Update Approval Oa Request by CS (User Allowed : RoleKey 11)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "oa_request_key": {
                    "type": "integer"
                  },
                  "oa_status": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "oa_request_key",
                  "oa_status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/posts": {
      "get": {
        "description": "Get All CMS Post",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_title",
                "post_sub_title",
                "post_content_author",
                "post_publish_thru",
                "post_publish_start"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Field (type : for filter by cms_post_type)(subtype : for filter by cms_post_subtype)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "type",
                "subtype"
              ]
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "If field is not empty, key not allowed empty ",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 5,
                  "data": [
                    {
                      "post_key": 1,
                      "post_type_key": 1,
                      "post_type_code": "BANNER",
                      "post_type_name": "Jumbotron",
                      "post_type_desc": "Poster atau Banner di halaman HOME",
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner",
                      "post_title": "Banner Dana Dollar",
                      "post_sub_title": "Banner Dana Dollar",
                      "post_content_author": "QA",
                      "post_content_sources": "-",
                      "post_publish_start": "01 Jan 2020",
                      "post_publish_thru": "31 Dec 2500",
                      "post_pinned": true,
                      "rec_image1": "https://devapi.mncasset.com/images/post/banner/dollar.png"
                    },
                    {
                      "post_key": 2,
                      "post_type_key": 1,
                      "post_type_code": "BANNER",
                      "post_type_name": "Jumbotron",
                      "post_type_desc": "Poster atau Banner di halaman HOME",
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner",
                      "post_title": "Banner Ekuitas",
                      "post_sub_title": "Banner Ekuitas",
                      "post_content_author": "QA",
                      "post_content_sources": "-",
                      "post_publish_start": "01 Jan 2020",
                      "post_publish_thru": "31 Dec 2500",
                      "post_pinned": true,
                      "rec_image1": "https://devapi.mncasset.com/images/post/banner/ekuitas.png"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/updatestatusapproval/compliance": {
      "post": {
        "description": "Update Approval Oa Request by Compliance (User Allowed : RoleKey 12)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "oa_request_key": {
                    "type": "integer"
                  },
                  "oa_status": {
                    "type": "integer",
                    "example": "260"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "oa_risk_level": {
                    "type": "integer",
                    "example": "111"
                  }
                },
                "required": [
                  "oa_request_key",
                  "oa_status",
                  "oa_risk_level"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/oarequestlist/dotransaction": {
      "get": {
        "description": "Get All OA Request (User Allowed : RoleKey 13. ex : yosua.role.13@gmail.com pass:Yosua1234!)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "oa_request_key",
                "oa_request_type",
                "oa_entry_start",
                "oa_entry_end",
                "oa_status",
                "rec_order",
                "rec_status"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "oa_request_key": 17,
                      "oa_entry_start": "08 Oct 2020",
                      "oa_entry_end": "08 Oct 2020",
                      "oa_status": "KYC_APPROVED",
                      "email_address": "aldy.alfianta@mncgroup.com",
                      "phone_mobile": "085328481220",
                      "date_birth": "25 Oct 1996",
                      "full_name": "Aldy Yoga",
                      "idcard_no": "3403162510960003"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/downloadformatsinvest": {
      "get": {
        "description": "Download format CSV Sinvest (User Allowed : RoleKey 13)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "oa_request_key",
                "oa_request_type",
                "oa_entry_start",
                "oa_entry_end",
                "oa_status",
                "rec_order",
                "rec_status"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "data_row": "Type|SA Code|SID|First Name|Middle Name| Last Name|Country of Nationality|ID no |ID Expiration Date| NPWP no|NPWP Registration Date|Country of Birth|Place of Birth|Date of Birth |Gender|Educational Background|Mothers Maiden Name|Religion|Occupation|Income Level (IDR)|Marital Status|Spouses Name|Investors Risk Profile|Investment Objective|Source of Fund|Asset Owner|KTP Address|KTP City Code|KTP Postal Code|Correspondence Address|Correspondence City Code|Correspondence City Name|Correspondence Postal Code|Country of Correspondence|Domicile Address|Domicile City Code|Domicile City Name|Domicile Postal Code|Country of Domicile|Home Phone|Mobile Phone|Facsimile|Email|Statement Type|FATCA (Status)|TIN / Foreign TIN|TIN / Foreign TIN Issuance Country|REDM Payment Bank BIC Code 1|REDM Payment Bank BI Member Code 1|REDM Payment Bank Name 1| REDM Payment Bank Country 1| REDM Payment Bank Branch 1|REDM Payment A/C CCY 1|REDM Payment A/C No. 1|REDM Payment A/C Name 1|REDM Payment Bank BIC Code 2|REDM Payment Bank BI Member Code 2|REDM Payment Bank Name 2|REDM Payment Bank Country 2|REDM Payment Bank Branch 2|REDM Payment A/C CCY 2|REDM Payment A/C No. 2|REDM Payment A/C Name 2|REDM Payment Bank BIC Code 3|REDM Payment Bank BI Member Code 3| REDM Payment Bank Name 3|REDM Payment Bank Country 3|REDM Payment Bank Branch 3|REDM Payment A/C CCY 3|REDM Payment A/C No. 3|REDM Payment A/C Name 3|Client Code"
                    },
                    {
                      "data_row": "1|EP002||khair|||1|1234567889012346||||ID|Jakarta|19800710|1|5|asdasd|5|1|5|2||1|2|4|1|Jl. asdasd|0003|10450|Jl. asdasd|0003|Kabupaten Aceh Besar||ID|Jl. asdasd|0003|Kabupaten Aceh Besar||ID|14022|081318696023||muhammad.rahmatul@mncgroup.com|2|||||PDJBIDJA|BANK BJB|ID||IDR|123456789012|asdasdasd|||||||||||||||||009998"
                    },
                    {
                      "data_row": "1|EP002||Aldy|Yoga||1|1234567890123456||||ID|ndjnuds|19800801|1|5|cjsmnkvnd|1|4|1|1||1|1|2|1|ncsjnsuvnduv|0001|12345|ncsjnsuvnduv|0001|Kabupaten Aceh Barat||ID|ncsjnsuvnduv|0001|Kabupaten Aceh Barat||ID|098374233445|Yoga123?||elyoga1996@gmail.com|2|||||ABNAIDJA|ABN AMRO|ID||IDR|931324244|ncanis|||||||||||||||||009999"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/post/{key}": {
      "get": {
        "description": "Get One CMS Post",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "post key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "post_key": 1,
                    "post_subtype": {
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner"
                    },
                    "post_title": "Tes Post Create",
                    "post_sub_title": "hahaha coba gan",
                    "post_content": "hahaha coba gan, hahaha coba gan, hahaha coba gan, hahaha coba gan mari kita lihat",
                    "post_content_author": "DEV-YS",
                    "post_content_sources": "iNews",
                    "post_publish_start": "01 Jan 2020",
                    "post_publish_thru": "31 Dec 2500",
                    "post_page_allowed": false,
                    "post_comment_allowed": false,
                    "post_comment_displayed": false,
                    "post_files_allowed": false,
                    "post_video_allowed": false,
                    "post_video_url": "",
                    "post_pinned": true,
                    "rec_image1": "https://devapi.mncasset.com/images/post/faq/7065_dLZJhDkjLCaMVOGY1nb1.jpg",
                    "rec_image2": "https://devapi.mncasset.com/images/post/faq/7065_SLn7CWBIN5TexWlZUuG8.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/post/create": {
      "post": {
        "description": "Create CMS Post",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "post_subtype_key": {
                    "type": "integer"
                  },
                  "post_title": {
                    "type": "string"
                  },
                  "post_sub_title": {
                    "type": "string"
                  },
                  "post_content": {
                    "type": "string"
                  },
                  "post_content_author": {
                    "type": "string"
                  },
                  "post_content_sources": {
                    "type": "string"
                  },
                  "post_publish_start": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "post_publish_thru": {
                    "type": "string",
                    "example": "2025-10-30"
                  },
                  "post_page_allowed": {
                    "type": "boolean"
                  },
                  "post_comment_allowed": {
                    "type": "boolean"
                  },
                  "post_comment_displayed": {
                    "type": "boolean"
                  },
                  "post_files_allowed": {
                    "type": "boolean"
                  },
                  "post_video_allowed": {
                    "type": "boolean"
                  },
                  "post_video_url": {
                    "type": "string"
                  },
                  "post_pinned": {
                    "type": "boolean"
                  },
                  "rec_image1": {
                    "type": "file"
                  },
                  "rec_image2": {
                    "type": "file"
                  }
                },
                "required": [
                  "post_subtype_key",
                  "post_title",
                  "post_publish_start",
                  "post_publish_thru",
                  "post_page_allowed",
                  "post_comment_allowed",
                  "post_comment_displayed",
                  "post_files_allowed",
                  "post_video_allowed",
                  "post_pinned"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/post/update/{key}": {
      "post": {
        "description": "Update CMS Post",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "post_key": {
                    "type": "integer"
                  },
                  "post_subtype_key": {
                    "type": "integer"
                  },
                  "post_title": {
                    "type": "string"
                  },
                  "post_sub_title": {
                    "type": "string"
                  },
                  "post_content": {
                    "type": "string"
                  },
                  "post_content_author": {
                    "type": "string"
                  },
                  "post_content_sources": {
                    "type": "string"
                  },
                  "post_publish_start": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "post_publish_thru": {
                    "type": "string",
                    "example": "2025-10-30"
                  },
                  "post_page_allowed": {
                    "type": "boolean"
                  },
                  "post_comment_allowed": {
                    "type": "boolean"
                  },
                  "post_comment_displayed": {
                    "type": "boolean"
                  },
                  "post_files_allowed": {
                    "type": "boolean"
                  },
                  "post_video_allowed": {
                    "type": "boolean"
                  },
                  "post_video_url": {
                    "type": "string"
                  },
                  "post_pinned": {
                    "type": "boolean"
                  },
                  "rec_image1": {
                    "type": "file"
                  },
                  "rec_image2": {
                    "type": "file"
                  }
                },
                "required": [
                  "post_key",
                  "post_subtype_key",
                  "post_title",
                  "post_publish_start",
                  "post_publish_thru",
                  "post_page_allowed",
                  "post_comment_allowed",
                  "post_comment_displayed",
                  "post_files_allowed",
                  "post_video_allowed",
                  "post_pinned"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/post/delete": {
      "post": {
        "description": "Delete CMS Post",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "post_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "post_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/financialcalc": {
      "get": {
        "description": "Get All Financial Calculator",
        "tags": [
          "Admin Financial Calculator"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "calc_key",
                "user_login_name",
                "customer_name",
                "customer_role",
                "purpose_code",
                "purpose_name",
                "purpose_desc",
                "invest_target",
                "invest_return",
                "invest_period",
                "result_invest",
                "result_remakrs"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 2,
                  "data": [
                    {
                      "calc_key": 3,
                      "user_login_key": 44,
                      "user_login_name": "aldy.alfianta@mncgroup.com",
                      "customer_name": "Aldy Yoga",
                      "customer_role": "CUSTOMER_RETAIL",
                      "invest_purpose_key": "3",
                      "purpose_code": "Transport",
                      "purpose_name": "Kendaraan",
                      "purpose_desc": "Transaport or Travelling",
                      "invest_target": 4000000,
                      "invest_return": 300000,
                      "invest_period": 1,
                      "result_invest": 5400000,
                      "result_remakrs": "mnc"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 11, 12)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist/cutoff": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist/batch": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "nav_date",
            "in": "query",
            "description": "Filter nav_date",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-23"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist/confirmation": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist/correctionadmin": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 7, 10)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CORRECTED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionlist/posting": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 13, trans_status_key = 8)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transaction_key",
                "branch_key",
                "agent_key",
                "customer_key",
                "product_key",
                "trans_date",
                "trans_amount",
                "trans_bank_key"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "transaction_key": 2,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga",
                      "product_name": "MNC DANA SYARIAH",
                      "trans_status": "CONFIRMED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 200000,
                      "trans_unit": 20,
                      "total_amount": 2000,
                      "trans_bank_name": "ANTAR DAERAH",
                      "trans_bank_accno": "Maria",
                      "trans_bankacc_name": "Ranty",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    },
                    {
                      "transaction_key": 1,
                      "branch_name": "",
                      "agent_name": "SALES MNC DUIT",
                      "customer_name": "Aldy Yoga yuyu",
                      "product_name": "MNC DANA LANCAR",
                      "trans_status": "CONFIRMED",
                      "trans_date": "09 Oct 2020",
                      "trans_type": "Subscription",
                      "nav_date": "09 Oct 2020",
                      "trans_amount": 100000,
                      "trans_unit": 10,
                      "total_amount": 1000,
                      "trans_bank_name": "ABN AMRO",
                      "trans_bank_accno": "Yona",
                      "trans_bankacc_name": "Santi",
                      "product_name_out": "MNC DANA SYARIAH",
                      "product_name_in": "MNC DANA LANCAR"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transaction/{key}": {
      "get": {
        "description": "Get All Transaction (User Allowed : RoleKey 7, 10, 11, 12, 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "transaction key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "transaction_key": 1,
                    "branch": {
                      "branch_key": 1,
                      "branch_code": "HO-1",
                      "branch_name": "MNC ASSET HO (BRANCH)"
                    },
                    "agent": {
                      "agent_key": 1,
                      "agent_code": "303",
                      "agent_name": "SALES MNC DUIT"
                    },
                    "customer": {
                      "customer_key": 40,
                      "full_name": "Aldy Yoga yuyu",
                      "sid_no": null,
                      "unit_holder_idno": "202010000001"
                    },
                    "product": {
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "MNC DANA LANCAR"
                    },
                    "trans_status": {
                      "trans_status_key": 2,
                      "status_code": "ENTRIED",
                      "status_description": "Transaction has been successfully entry by customer or branch admin, waiting for CS Approval."
                    },
                    "trans_date": "09 Oct 2020",
                    "trans_type": {
                      "trans_type_key": 1,
                      "type_code": "SUB",
                      "type_description": "Subscription"
                    },
                    "trx_code": {
                      "lookup_key": 137,
                      "lkp_group_key": 30,
                      "lkp_code": "BUY",
                      "lkp_name": "BUY"
                    },
                    "nav_date": "09 Oct 2020",
                    "entry_mode": {
                      "lookup_key": 140,
                      "lkp_group_key": 31,
                      "lkp_code": "AMOUNT",
                      "lkp_name": "Amount"
                    },
                    "trans_amount": 100000,
                    "trans_unit": 10,
                    "trans_unit_percent": 0.2,
                    "flag_redempt_all": false,
                    "flag_newsub": true,
                    "trans_fee_percent": 1,
                    "trans_fee_amount": 1000,
                    "charges_fee_amount": 0,
                    "services_fee_amount": 0,
                    "total_amount": 1000,
                    "settlement_date": null,
                    "trans_bank_accno": "Yona",
                    "trans_bankacc_name": "Santi",
                    "trans_bank": {
                      "bank_key": 1,
                      "bank_code": "ABNAIDJA",
                      "bank_name": "ABN AMRO"
                    },
                    "trans_remarks": null,
                    "trans_references": null,
                    "promo_code": null,
                    "sales_code": null,
                    "risk_waiver": true,
                    "file_upload_date": null,
                    "payment_method": {
                      "lookup_key": 284,
                      "lkp_group_key": 68,
                      "lkp_code": "0",
                      "lkp_name": "Transfer"
                    },
                    "trx_risk_level": {
                      "lookup_key": 111,
                      "lkp_group_key": 23,
                      "lkp_code": "1",
                      "lkp_name": "Risiko Rendah"
                    },
                    "proceed_date": null,
                    "proceed_amount": null,
                    "sent_date": null,
                    "sent_references": null,
                    "confirmed_date": null,
                    "posted_date": null,
                    "posted_units": null,
                    "aca": {
                      "aca_key": 2,
                      "acc_key": 1,
                      "agent_key": 40,
                      "agent_code": "BNISEK",
                      "agent_name": "SALES APERD BNI SEKURITAS"
                    },
                    "settled_date": null,
                    "rec_image1": "https://devapi.mncasset.com/images/user/7/transfer/oke.jpg",
                    "rec_created_date": "20 Oct 2020",
                    "rec_created_by": "12",
                    "transaction_confirmation": {
                      "tc_key": 1,
                      "confirm_date": "2020-10-21 10:34:46",
                      "confirmed_amount": 1000000,
                      "confirmed_unit": 20
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionapproval/cs": {
      "post": {
        "description": "Update Approval Transaction by CS (User Allowed : RoleKey 11)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "trans_status_key": {
                    "type": "integer",
                    "enum": [
                      "1",
                      "3",
                      "4"
                    ]
                  },
                  "transaction_key": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "trans_status_key",
                  "transaction_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionapproval/compliance": {
      "post": {
        "description": "Update Approval Transaction by Compliance (User Allowed : RoleKey 12)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "trans_status_key": {
                    "type": "integer",
                    "enum": [
                      "1",
                      "3",
                      "5"
                    ]
                  },
                  "trx_risk_level": {
                    "type": "integer",
                    "enum": [
                      "114",
                      "115"
                    ]
                  },
                  "transaction_key": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "trans_status_key",
                  "transaction_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transaction/updatenavdate": {
      "post": {
        "description": "Update Approval Transaction by FundAdmin (User Allowed : RoleKey 13, Status Trans Allowed : 5)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_key": {
                    "type": "integer"
                  },
                  "nav_date": {
                    "type": "string",
                    "example": "2020-10-23"
                  }
                },
                "required": [
                  "transaction_key",
                  "nav_date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionapproval/cutoff": {
      "post": {
        "description": "Update Approval Transaction by FundAdmin (User Allowed : RoleKey 13, Status Trans Allowed : 5)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "trans_ids": {
                    "type": "string",
                    "example": "1,2,3"
                  }
                },
                "required": [
                  "trans_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transaction/downloadformatsinvest": {
      "get": {
        "description": "Get All Transaction Format Sinvest (User Allowed : RoleKey 13, trans_status_key = 6)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "nav_date",
            "in": "query",
            "description": "Filter nav_date",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-23"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": {
                    "subscription_redeemption": [
                      {
                        "transaction_date": "20201023",
                        "transaction_type": 1,
                        "sa_code": "EP002",
                        "investor_fund_unit": "",
                        "fund_code": "EP002MMCDANLCR00",
                        "amount_nominal": "100000",
                        "amount_unit": "",
                        "amount_all_unit": "",
                        "fee_nominal": "1000",
                        "fee_unit": "",
                        "fee_percent": "1",
                        "redm_payment_ac_sequence_code": "1",
                        "redm_payment_bank_bic_code": "",
                        "redm_payment_bank_bi_member_code": "",
                        "redm_payment_ac_code": "",
                        "payment_date": "20201023",
                        "transfer_type": "",
                        "sa_reference_no": 1
                      },
                      {
                        "transaction_date": "20201023",
                        "transaction_type": 2,
                        "sa_code": "EP002",
                        "investor_fund_unit": "",
                        "fund_code": "EP002MMCDANLCR00",
                        "amount_nominal": "200000",
                        "amount_unit": "200",
                        "amount_all_unit": "",
                        "fee_nominal": "2000",
                        "fee_unit": "",
                        "fee_percent": "1",
                        "redm_payment_ac_sequence_code": "1",
                        "redm_payment_bank_bic_code": "BMRIIDJA",
                        "redm_payment_bank_bi_member_code": "0008",
                        "redm_payment_ac_code": "025508",
                        "payment_date": "20201109",
                        "transfer_type": "3",
                        "sa_reference_no": 2
                      }
                    ],
                    "switch": [
                      {
                        "transaction_date": "20201023",
                        "transaction_type": 3,
                        "sa_code": "EP002",
                        "investor_fund_unit": "",
                        "switch_out_fund_code": "",
                        "switch_out_amount_nominal": "",
                        "switch_out_amount_unit": "",
                        "switch_out_amount_all": "",
                        "switching_fee_charge_fund": "",
                        "fee_nominal": "",
                        "fee_unit": "",
                        "fee_percent": "",
                        "switch_in_fund_code": "",
                        "payment_date": "",
                        "transfer_type": "",
                        "sa_reference_no": 2
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transaction/downloadformatexcel": {
      "post": {
        "description": "Download format excel (User Allowed : RoleKey 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "nav_date",
            "in": "query",
            "description": "Filter nav_date",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-23"
          },
          {
            "name": "transaction_type",
            "in": "query",
            "description": "Filter transaction_type",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                "1",
                "2",
                "3",
                "4"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "id_transaction": 1,
                      "id_category": "SUB",
                      "product_name": "MNC DANA LANCAR",
                      "full_name": "Aldy Yoga yuyu",
                      "nav_date": "10/23/2020",
                      "transaction_date": "10/23/2020",
                      "units": 100,
                      "net_amount": 100000,
                      "nav_value": 1057.35,
                      "approve_units": 100,
                      "approve_amount": 100000,
                      "keterangan": "ABNAMRO",
                      "result": ""
                    },
                    {
                      "id_transaction": 3,
                      "id_category": "SWTIN",
                      "product_name": "MNC DANA SYARIAH",
                      "full_name": "Aldy Yoga yuyu",
                      "nav_date": "10/23/2020",
                      "transaction_date": "10/23/2020",
                      "units": 60,
                      "net_amount": 100000,
                      "nav_value": null,
                      "approve_units": 60,
                      "approve_amount": 100000,
                      "keterangan": "NAV VALUE NOT EXIST",
                      "result": ""
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transaction/uploadexcelconfirmation": {
      "post": {
        "description": "TEST",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "excel": {
                    "type": "file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": [
                    {
                      "id_transaction": 12,
                      "id_category": "SUB",
                      "product_name": "qqq",
                      "full_name": "aaaa",
                      "nav_date": "19-04-2018",
                      "transaction_date": "02-11-2020",
                      "units": 30,
                      "net_amount": 12345,
                      "nav_value": 4254.45,
                      "approve_units": 29,
                      "approve_amount": 12345,
                      "keterangan": "",
                      "result": "SUCCESS"
                    },
                    {
                      "id_transaction": 13,
                      "id_category": "SUB",
                      "product_name": "www",
                      "full_name": "qqqq",
                      "nav_date": "19-04-2018",
                      "transaction_date": "02-11-2020",
                      "units": 30,
                      "net_amount": 50000,
                      "nav_value": 4254.45,
                      "approve_units": 30,
                      "approve_amount": 50000,
                      "keterangan": "",
                      "result": "SUCCESS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactionapproval/posting": {
      "post": {
        "description": "Posting Transaction by FundAdmin (User Allowed : RoleKey 13)",
        "tags": [
          "Admin Transaction"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "transaction_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/transactiontypelist": {
      "get": {
        "description": "Get All Transaction Type",
        "tags": [
          "Admin Transaction Type"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "trans_type_key": 1,
                      "type_code": "SUB",
                      "type_description": "Subscription"
                    },
                    {
                      "trans_type_key": 2,
                      "type_code": "RED",
                      "type_description": "Redeemption"
                    },
                    {
                      "trans_type_key": 3,
                      "type_code": "SWTOT",
                      "type_description": "Switch Out"
                    },
                    {
                      "trans_type_key": 4,
                      "type_code": "SWTIN",
                      "type_description": "Switch In"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productlist": {
      "get": {
        "description": "Get All Product (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "product_key",
                "product_code",
                "product_name",
                "launch_date",
                "inception_date",
                "isin_code",
                "flag_syariah",
                "sinvest_fund_code"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_name",
            "in": "query",
            "description": "product_name filter with opration like",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_code",
            "in": "query",
            "description": "product_code filter with opration like",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isin_code",
            "in": "query",
            "description": "isin_code filter with opration like",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR",
                      "product_name_alt": "DANA LANCAR",
                      "currency_name": "Indonesia Rupiah",
                      "product_category_name": "Mutual Fund",
                      "product_type_name": "Public Fund",
                      "risk_profile_name": null,
                      "launch_date": "21 Sep 2004",
                      "inception_date": "21 Sep 2004",
                      "isin_code": "IDN000005907",
                      "syariah": "Tidak",
                      "custodian_full_name": "Bank ABN Amro",
                      "sinvest_fund_code": "EP002MMCDANLCR00",
                      "enabled": "Ya",
                      "subscription": "Ya",
                      "redemption": "Ya",
                      "switch_out": "Ya",
                      "switch_in": "Ya"
                    },
                    {
                      "product_key": 2,
                      "product_code": "BDM",
                      "product_name": "MNC DANA SYARIAH",
                      "product_name_alt": "DANA SYARIAH",
                      "currency_name": "Indonesia Rupiah",
                      "product_category_name": "Mutual Fund",
                      "product_type_name": "Public Fund",
                      "risk_profile_name": null,
                      "launch_date": "29 Oct 2004",
                      "inception_date": "29 Oct 2004",
                      "isin_code": "BIGDM",
                      "syariah": "Ya",
                      "custodian_full_name": "Bank BNI",
                      "sinvest_fund_code": "EP002FISDANSYA00",
                      "enabled": "Ya",
                      "subscription": "Ya",
                      "redemption": "Ya",
                      "switch_out": "Ya",
                      "switch_in": "Ya"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/product/{key}": {
      "get": {
        "description": "Get Detail Product Transaction (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "product_key": 52,
                    "product_code": "MNCDT8888",
                    "product_name": "REKSADANA TERPROTEKSI MNC 99889",
                    "product_name_alt": "REKSADANA TERPROTEKSI MNC 99889",
                    "currency": {
                      "currency_key": 1,
                      "code": "IDR",
                      "symbol": "Rp",
                      "name": "Indonesia Rupiah",
                      "flag_base": 1
                    },
                    "product_category": {
                      "product_category_key": 1,
                      "category_code": "MF",
                      "category_name": "Mutual Fund",
                      "category_desc": "Reksadana"
                    },
                    "product_type": {
                      "product_type_key": 2,
                      "product_type_code": "PRIVATE",
                      "product_type_name": "Private Fund",
                      "product_type_desc": "Reksadana terbatas atau tidak dijual umum"
                    },
                    "fund_type": {
                      "fund_type_key": 3,
                      "fund_type_code": "BF",
                      "fund_type_name": "Campuran"
                    },
                    "fund_structure": {
                      "fund_structure_key": 2,
                      "fund_structure_code": "CloseEnd",
                      "fund_structure_name": "Close_End",
                      "fund_structure_desc": "Close_End"
                    },
                    "risk_profile": {
                      "risk_profile_key": 2,
                      "risk_code": "RendahMenengah",
                      "risk_name": "Konservatif Moderate",
                      "risk_desc": "Investor masih tetap mengutamakan tingkat keutuhan nilai pokok investasi, namun bersedia menerima fluktuasi investasi jangka pendek untuk mendapatkan hasil investasi."
                    },
                    "product_profile": "<p><strong>MNC Dana Terproteksi Seri 32</strong>&nbsp;adalah produk reksa dana milik MNC Asset Management yang memberikan proteksi 100% terhadap pokok investasi atas Unit Penyertaan yang akan dicapai secara keseluruhan pada Tanggal Pelunasan Akhir, melalui mekanisme investasi sesuai dengan kebijakan investasi serta memberikan Investor potensi pembagian hasil investasi. Produk ini termasuk kategori reksa dana terproteksi dengan alokasi investasi pada obligasi berkisar antara 80%-100% dan instrumen pasar uang berkisar antara 0%-20%.</p>",
                    "investment_objectives": "MNC DANA TERPROTEKSI SERI 32 akan berinvestasi sampai dengan Tanggal Pelunasan Akhir dengan melakukan investasi minimum 70% (tujuh puluh persen) dan maksimum 100% (seratus persen) dari Nilai Aktiva Bersih pada Efek Bersifat Utang yang diterbitkan dan/atau dijamin oleh Pemerintah Republik Indonesia dan/atau Efek Bersifat Utang yang diterbitkan oleh korporasi dan/atau lembaga internasional dimana Pemerintah Republik Indonesia menjadi salah satu anggotanya dan/atau Efek Beragun Aset dan/atau Efek Bersifat Utang lainnya yang ditetapkan oleh OJK dikemudian hari, yang telah diperingkat oleh Perusahaan Pemeringkat Efek yang telah terdaftar di OJK dan masuk dalam kategori layak investasi (investment grade) dan yang diperdagangkan di Indonesia;minimum 0% (nol persen) dan maksimum 30% (tiga puluh persen) dari Nilai Aktiva Bersih pada instrumen pasar uang dalam negeri yang diterbitkan dengan jangka waktu tidak lebih dari 1 (satu) tahun dan/atau deposito dan/atau Efek bersifat ekuitas yang diperdagangkan di Indonesia, dalam mata uang Rupiah; sesuai dengan peraturan perundang-undangan yang berlaku di Indonesia.",
                    "product_phase": {
                      "lookup_key": 176,
                      "lkp_group_key": 36,
                      "lkp_code": "1",
                      "lkp_name": "IPO"
                    },
                    "nav_valuation_type": {
                      "lookup_key": 180,
                      "lkp_group_key": 37,
                      "lkp_code": "2",
                      "lkp_name": "MONTHLY"
                    },
                    "prospectus_link": "#",
                    "launch_date": "17 Oct 2020",
                    "inception_date": "18 Oct 2020",
                    "isin_code": "EP002PFCDANPRO9999",
                    "flag_syariah": true,
                    "max_sub_fee": 1,
                    "max_red_fee": 1,
                    "max_swi_fee": 1,
                    "min_sub_amount": 1,
                    "min_red_amount": 1,
                    "min_red_unit": 1,
                    "min_unit_after_red": 1,
                    "management_fee": 1,
                    "custodian_fee": 1,
                    "custodian": {
                      "custodian_key": 1,
                      "custodian_code": "ABNAMRO",
                      "custodian_short_name": "Bank ABN Amro",
                      "custodian_full_name": "Bank ABN Amro"
                    },
                    "ojk_fee": 0,
                    "product_fee_amount": 1,
                    "overwrite_transact_flag": true,
                    "overwrite_fee_flag": true,
                    "other_fee_amount": 1,
                    "settlement_period": 22,
                    "sinvest_fund_code": "657AASSDD",
                    "flag_enabled": true,
                    "flag_subscription": true,
                    "flag_redemption": true,
                    "flag_switch_out": true,
                    "flag_switch_in": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/product/delete": {
      "post": {
        "description": "Delete Product Admin : role 15",
        "tags": [
          "Admin Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "product_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/product/create": {
      "post": {
        "description": "Create Product : role 15",
        "tags": [
          "Admin Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_code": {
                    "type": "string"
                  },
                  "product_name": {
                    "type": "string"
                  },
                  "product_name_alt": {
                    "type": "string"
                  },
                  "currency_key": {
                    "type": "integer"
                  },
                  "product_category_key": {
                    "type": "integer"
                  },
                  "product_type_key": {
                    "type": "integer"
                  },
                  "fund_type_key": {
                    "type": "integer"
                  },
                  "fund_structure_key": {
                    "type": "integer"
                  },
                  "risk_profile_key": {
                    "type": "integer"
                  },
                  "product_profile": {
                    "type": "string"
                  },
                  "investment_objectives": {
                    "type": "string"
                  },
                  "product_phase": {
                    "type": "integer"
                  },
                  "nav_valuation_type": {
                    "type": "integer"
                  },
                  "prospectus_link": {
                    "type": "string"
                  },
                  "launch_date": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "inception_date": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "isin_code": {
                    "type": "string"
                  },
                  "flag_syariah": {
                    "type": "boolean"
                  },
                  "max_sub_fee": {
                    "type": "number"
                  },
                  "max_red_fee": {
                    "type": "number"
                  },
                  "max_swi_fee": {
                    "type": "number"
                  },
                  "min_sub_amount": {
                    "type": "number"
                  },
                  "min_red_amount": {
                    "type": "number"
                  },
                  "min_red_unit": {
                    "type": "number"
                  },
                  "min_unit_after_red": {
                    "type": "number"
                  },
                  "management_fee": {
                    "type": "number"
                  },
                  "custodian_fee": {
                    "type": "number"
                  },
                  "custodian_key": {
                    "type": "integer"
                  },
                  "ojk_fee": {
                    "type": "number"
                  },
                  "product_fee_amount": {
                    "type": "number"
                  },
                  "overwrite_transact_flag": {
                    "type": "boolean"
                  },
                  "overwrite_fee_flag": {
                    "type": "boolean"
                  },
                  "other_fee_amount": {
                    "type": "number"
                  },
                  "settlement_period": {
                    "type": "integer"
                  },
                  "sinvest_fund_code": {
                    "type": "string"
                  },
                  "flag_enabled": {
                    "type": "boolean"
                  },
                  "flag_subscription": {
                    "type": "boolean"
                  },
                  "flag_redemption": {
                    "type": "boolean"
                  },
                  "flag_switch_out": {
                    "type": "boolean"
                  },
                  "flag_switch_in": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "product_code",
                  "product_name",
                  "product_name_alt",
                  "flag_syariah",
                  "max_sub_fee",
                  "max_red_fee",
                  "max_swi_fee",
                  "min_sub_amount",
                  "min_red_amount",
                  "min_red_unit",
                  "min_unit_after_red",
                  "management_fee",
                  "custodian_fee",
                  "ojk_fee",
                  "product_fee_amount",
                  "overwrite_transact_flag",
                  "overwrite_fee_flag",
                  "other_fee_amount",
                  "flag_enabled",
                  "flag_subscription",
                  "flag_redemption",
                  "flag_switch_out",
                  "flag_switch_in"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/product/update": {
      "post": {
        "description": "Update Product : role 15",
        "tags": [
          "Admin Product"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_key": {
                    "type": "integer"
                  },
                  "product_code": {
                    "type": "string"
                  },
                  "product_name": {
                    "type": "string"
                  },
                  "product_name_alt": {
                    "type": "string"
                  },
                  "currency_key": {
                    "type": "integer"
                  },
                  "product_category_key": {
                    "type": "integer"
                  },
                  "product_type_key": {
                    "type": "integer"
                  },
                  "fund_type_key": {
                    "type": "integer"
                  },
                  "fund_structure_key": {
                    "type": "integer"
                  },
                  "risk_profile_key": {
                    "type": "integer"
                  },
                  "product_profile": {
                    "type": "string"
                  },
                  "investment_objectives": {
                    "type": "string"
                  },
                  "product_phase": {
                    "type": "integer"
                  },
                  "nav_valuation_type": {
                    "type": "integer"
                  },
                  "prospectus_link": {
                    "type": "string"
                  },
                  "launch_date": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "inception_date": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "isin_code": {
                    "type": "string"
                  },
                  "flag_syariah": {
                    "type": "boolean"
                  },
                  "max_sub_fee": {
                    "type": "number"
                  },
                  "max_red_fee": {
                    "type": "number"
                  },
                  "max_swi_fee": {
                    "type": "number"
                  },
                  "min_sub_amount": {
                    "type": "number"
                  },
                  "min_red_amount": {
                    "type": "number"
                  },
                  "min_red_unit": {
                    "type": "number"
                  },
                  "min_unit_after_red": {
                    "type": "number"
                  },
                  "management_fee": {
                    "type": "number"
                  },
                  "custodian_fee": {
                    "type": "number"
                  },
                  "custodian_key": {
                    "type": "integer"
                  },
                  "ojk_fee": {
                    "type": "number"
                  },
                  "product_fee_amount": {
                    "type": "number"
                  },
                  "overwrite_transact_flag": {
                    "type": "boolean"
                  },
                  "overwrite_fee_flag": {
                    "type": "boolean"
                  },
                  "other_fee_amount": {
                    "type": "number"
                  },
                  "settlement_period": {
                    "type": "integer"
                  },
                  "sinvest_fund_code": {
                    "type": "string"
                  },
                  "flag_enabled": {
                    "type": "boolean"
                  },
                  "flag_subscription": {
                    "type": "boolean"
                  },
                  "flag_redemption": {
                    "type": "boolean"
                  },
                  "flag_switch_out": {
                    "type": "boolean"
                  },
                  "flag_switch_in": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "product_key",
                  "product_code",
                  "product_name",
                  "product_name_alt",
                  "flag_syariah",
                  "max_sub_fee",
                  "max_red_fee",
                  "max_swi_fee",
                  "min_sub_amount",
                  "min_red_amount",
                  "min_red_unit",
                  "min_unit_after_red",
                  "management_fee",
                  "custodian_fee",
                  "ojk_fee",
                  "product_fee_amount",
                  "overwrite_transact_flag",
                  "overwrite_fee_flag",
                  "other_fee_amount",
                  "flag_enabled",
                  "flag_subscription",
                  "flag_redemption",
                  "flag_switch_out",
                  "flag_switch_in"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productlist/dropdown": {
      "get": {
        "description": "Get All Product Dropdown in Product Fee",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "product_key",
                "product_code",
                "product_name",
                "launch_date",
                "inception_date",
                "isin_code",
                "flag_syariah",
                "sinvest_fund_code"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR"
                    },
                    {
                      "product_key": 2,
                      "product_code": "BDM",
                      "product_name": "MNC DANA SYARIAH"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/currencylist": {
      "get": {
        "description": "Get List Currency",
        "tags": [
          "Admin Currency"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "currency_key",
                "code",
                "symbol",
                "flag_base"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "currency_key": 1,
                      "code": "IDR",
                      "symbol": "Rp",
                      "name": "Indonesia Rupiah",
                      "flag_base": 1
                    },
                    {
                      "currency_key": 2,
                      "code": "USD",
                      "symbol": "$",
                      "name": "US Dollar",
                      "flag_base": 0
                    },
                    {
                      "currency_key": 3,
                      "code": "EUR",
                      "symbol": "E",
                      "name": "EURO",
                      "flag_base": 0
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/custodianbanklist": {
      "get": {
        "description": "Get List Custodian Bank",
        "tags": [
          "Admin Custodian Bank"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "custodian_key",
                "custodian_code",
                "custodian_short_name",
                "custodian_full_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "custodian_key": 1,
                      "custodian_code": "ABNAMRO",
                      "custodian_short_name": "Bank ABN Amro",
                      "custodian_full_name": "Bank ABN Amro"
                    },
                    {
                      "custodian_key": 2,
                      "custodian_code": "MAYBANK",
                      "custodian_short_name": "Bank Maybank",
                      "custodian_full_name": "Bank Maybank"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/fundstructurelist": {
      "get": {
        "description": "Get List Fund Structure",
        "tags": [
          "Admin Fund Structure"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fund_structure_key",
                "fund_structure_code",
                "fund_structure_name",
                "fund_structure_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "fund_structure_key": 1,
                      "fund_structure_code": "OpendEnd",
                      "fund_structure_name": "Opend_End",
                      "fund_structure_desc": "Opend_End"
                    },
                    {
                      "fund_structure_key": 2,
                      "fund_structure_code": "CloseEnd",
                      "fund_structure_name": "Close_End",
                      "fund_structure_desc": "Close_End"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/fundtypelist": {
      "get": {
        "description": "Get List Fund Type",
        "tags": [
          "Admin Fund Type"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fund_type_key",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "fund_type_key": 1,
                      "fund_type_code": "MM",
                      "fund_type_name": "Pasar Uang"
                    },
                    {
                      "fund_type_key": 2,
                      "fund_type_code": "FI",
                      "fund_type_name": "Pendapatan Tetap"
                    },
                    {
                      "fund_type_key": 3,
                      "fund_type_code": "BF",
                      "fund_type_name": "Campuran"
                    },
                    {
                      "fund_type_key": 4,
                      "fund_type_code": "EQ",
                      "fund_type_name": "Saham"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productcategorylist": {
      "get": {
        "description": "Get List Product Category",
        "tags": [
          "Admin Product Category"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "product_category_key",
                "category_code",
                "category_name",
                "category_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "product_category_key": 1,
                      "category_code": "MF",
                      "category_name": "Mutual Fund",
                      "category_desc": "Reksadana"
                    },
                    {
                      "product_category_key": 2,
                      "category_code": "KPD",
                      "category_name": "KPD_Discrey",
                      "category_desc": "KPD_Discrey"
                    },
                    {
                      "product_category_key": 3,
                      "category_code": "ETF",
                      "category_name": "ETF",
                      "category_desc": "ETF"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/producttypelist": {
      "get": {
        "description": "Get List Product Type",
        "tags": [
          "Admin Product Type"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "product_type_key",
                "product_type_code",
                "product_type_name",
                "product_type_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "product_type_key": 1,
                      "product_type_code": "PUBLIC",
                      "product_type_name": "Public Fund",
                      "product_type_desc": "Reksa dana yang dijual untuk public"
                    },
                    {
                      "product_type_key": 2,
                      "product_type_code": "PRIVATE",
                      "product_type_name": "Private Fund",
                      "product_type_desc": "Reksadana terbatas atau tidak dijual umum"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/riskprofilelist": {
      "get": {
        "description": "Get List Risk Profile",
        "tags": [
          "Admin Risk Profile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "risk_profile_key",
                "risk_code",
                "risk_name",
                "risk_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "risk_profile_key": 1,
                      "risk_code": "Rendah",
                      "risk_name": "Konservatif",
                      "risk_desc": "Investor mengutamakan tingkat keutuhan nilai pokok investasi dengan risiko fluktuasi investasi yang relatif rendah untuk memenuhi kebutuhan aliran kas bulanan."
                    },
                    {
                      "risk_profile_key": 2,
                      "risk_code": "RendahMenengah",
                      "risk_name": "Konservatif Moderate",
                      "risk_desc": "Investor masih tetap mengutamakan tingkat keutuhan nilai pokok investasi, namun bersedia menerima fluktuasi investasi jangka pendek untuk mendapatkan hasil investasi."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfeelist": {
      "get": {
        "description": "Get List Product Fee : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fee_key",
                "fee_code",
                "product_key",
                "product_code",
                "product_name",
                "feetypename",
                "fee_date_start",
                "fee_date_thru",
                "period_hold"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search list by LIKE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_key",
            "in": "query",
            "description": "Search list by product_key =",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "fee_key": 1,
                      "fee_code": "TNC_SUB",
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR",
                      "FeeTypeName": "SUB",
                      "fee_date_start": "01 February 2020",
                      "fee_date_thru": "31 December 2200",
                      "period_hold": 30
                    },
                    {
                      "fee_key": 21,
                      "fee_code": "TNC_RED",
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR",
                      "FeeTypeName": "RED",
                      "fee_date_start": "01 January 2020",
                      "fee_date_thru": "31 December 2200",
                      "period_hold": 30
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/{key}": {
      "get": {
        "description": "Get Detail Product Fee (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "product fee key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "fee_key": 1,
                    "product": {
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR"
                    },
                    "fee_type": {
                      "lookup_key": 183,
                      "lkp_group_key": 38,
                      "lkp_code": "1",
                      "lkp_name": "SUB"
                    },
                    "fee_code": "TNC_SUB",
                    "flag_show_ontnc": true,
                    "fee_annotation": "<p>A. SUBSCRIPTION</p><ul style=\"list-style-type: disc;\"><li>Tidak dikenakan biaya Subscription</li><li>Minimal Investasi awal Rp. 100.000</li><li>Minimal Top Up Rp. 100.000</li><li>Batas waktu transaksi paling lambat pukul 13.00 WIB, apabila telah melewati batas waktu tersebut, transaksi akan diproses untuk hari bursa berikutnya.</li></ul><br/><p>B. REDEMPTION</p><ul><li>&lt; 3 bulan, biaya Redemption 0.5%</li><li>&gt; 3 bulan, biaya Redemption 0%</li><li>Minimal Redemption Rp. 100.000</li><li>Transfer antar Bank akan dikenakan Biaya</li></ul>",
                    "fee_desc": "Ketentuan Fee yang akan tampil di Transaksi SUBSCRIPTION ",
                    "fee_date_start": "01 Feb 2020",
                    "fee_date_thru": "31 Dec 2200",
                    "fee_nominal_type": {
                      "lookup_key": 191,
                      "lkp_group_key": 39,
                      "lkp_code": "1",
                      "lkp_name": "AMOUNT"
                    },
                    "enabled_min_amount": false,
                    "fee_min_amount": 0,
                    "enabled_max_amount": false,
                    "fee_max_amount": 0,
                    "fee_calc_method": {
                      "lookup_key": 193,
                      "lkp_group_key": 40,
                      "lkp_code": "1",
                      "lkp_name": "FLAT"
                    },
                    "calculation_baseon": {
                      "lookup_key": 196,
                      "lkp_group_key": 41,
                      "lkp_code": "1",
                      "lkp_name": "TRANSACT_COUNT"
                    },
                    "period_hold": 30,
                    "days_inyear": {
                      "lookup_key": 201,
                      "lkp_group_key": 42,
                      "lkp_code": "356",
                      "lkp_name": "366 Hari"
                    },
                    "product_fee_items": [
                      {
                        "product_fee_item_key": 1,
                        "principle_limit": 0,
                        "fee_value": 0,
                        "item_notes": "Tidak dikenakan biaya Subscription"
                      },
                      {
                        "product_fee_item_key": 2,
                        "principle_limit": 0,
                        "fee_value": 0,
                        "item_notes": "Tidak dikenakan biaya Subscription"
                      },
                      {
                        "product_fee_item_key": 3,
                        "principle_limit": 0,
                        "fee_value": 0,
                        "item_notes": "Tidak dikenakan biaya Subscription"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/delete": {
      "post": {
        "description": "Delete Product Fee Admin : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fee_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "fee_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/create": {
      "post": {
        "description": "Create Product : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_key": {
                    "type": "integer"
                  },
                  "fee_type": {
                    "type": "integer"
                  },
                  "fee_code": {
                    "type": "string"
                  },
                  "flag_show_ontnc": {
                    "type": "boolean"
                  },
                  "fee_annotation": {
                    "type": "string"
                  },
                  "fee_desc": {
                    "type": "string"
                  },
                  "fee_date_start": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "fee_date_thru": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "fee_nominal_type": {
                    "type": "integer"
                  },
                  "enabled_min_amount": {
                    "type": "boolean"
                  },
                  "fee_min_amount": {
                    "type": "number"
                  },
                  "enabled_max_amount": {
                    "type": "boolean"
                  },
                  "fee_max_amount": {
                    "type": "number"
                  },
                  "fee_calc_method": {
                    "type": "integer"
                  },
                  "calculation_baseon": {
                    "type": "integer"
                  },
                  "period_hold": {
                    "type": "integer"
                  },
                  "days_inyear": {
                    "type": "integer"
                  },
                  "json_fee_items": {
                    "type": "string",
                    "example": "[{\"principle_limit\":98.1,\"fee_value\":0.5,\"item_notes\":\"notes1\"},{\"principle_limit\":100000,\"fee_value\":1.3,\"item_notes\":\"notes2\"}]"
                  }
                },
                "required": [
                  "product_key",
                  "enabled_min_amount",
                  "enabled_max_amount",
                  "period_hold"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/update": {
      "post": {
        "description": "Create Product : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fee_key": {
                    "type": "integer"
                  },
                  "product_key": {
                    "type": "integer"
                  },
                  "fee_type": {
                    "type": "integer"
                  },
                  "fee_code": {
                    "type": "string"
                  },
                  "flag_show_ontnc": {
                    "type": "boolean"
                  },
                  "fee_annotation": {
                    "type": "string"
                  },
                  "fee_desc": {
                    "type": "string"
                  },
                  "fee_date_start": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "fee_date_thru": {
                    "type": "string",
                    "example": "2020-10-14"
                  },
                  "fee_nominal_type": {
                    "type": "integer"
                  },
                  "enabled_min_amount": {
                    "type": "boolean"
                  },
                  "fee_min_amount": {
                    "type": "number"
                  },
                  "enabled_max_amount": {
                    "type": "boolean"
                  },
                  "fee_max_amount": {
                    "type": "number"
                  },
                  "fee_calc_method": {
                    "type": "integer"
                  },
                  "calculation_baseon": {
                    "type": "integer"
                  },
                  "period_hold": {
                    "type": "integer"
                  },
                  "days_inyear": {
                    "type": "integer"
                  }
                },
                "required": [
                  "fee_key",
                  "product_key",
                  "enabled_min_amount",
                  "enabled_max_amount",
                  "period_hold"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/feeitem/create": {
      "post": {
        "description": "Create Product Fee Item in form Update Product Fee : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_fee_key": {
                    "type": "integer"
                  },
                  "principle_limit": {
                    "type": "number"
                  },
                  "fee_value": {
                    "type": "number"
                  },
                  "item_notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "product_fee_key",
                  "principle_limit",
                  "fee_value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/feeitem/update": {
      "post": {
        "description": "Update Product Fee Item in form Update Product Fee : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_fee_item_key": {
                    "type": "integer"
                  },
                  "product_fee_key": {
                    "type": "integer"
                  },
                  "principle_limit": {
                    "type": "number"
                  },
                  "fee_value": {
                    "type": "number"
                  },
                  "item_notes": {
                    "type": "string"
                  }
                },
                "required": [
                  "product_fee_item_key",
                  "product_fee_key",
                  "principle_limit",
                  "fee_value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/feeitem/delete": {
      "post": {
        "description": "Delete Product Fee Item in form Update Product Fee : role 15",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_fee_item_key": {
                    "type": "integer"
                  },
                  "product_fee_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "product_fee_item_key",
                  "product_fee_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productbankaccountlist": {
      "get": {
        "description": "Get List Product Bank Account : role 15",
        "tags": [
          "Admin Product Bank Account"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "prod_bankacc_key",
                "product_code",
                "product_name_alt",
                "bank_account_name",
                "bank_account_purpose",
                "bank_fullname",
                "account_no",
                "account_holder_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search list by LIKE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_key",
            "in": "query",
            "description": "Search list by product_key =",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 31,
                  "data": [
                    {
                      "prod_bankacc_key": 1,
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name_alt": "DANA LANCAR",
                      "bank_account_name": "SUB_ACCOUNT - MNC DANA LANCAR",
                      "bank_account_purpose": "SUB_ACCOUNT",
                      "bank_fullname": "BANK MANDIRI",
                      "account_no": "103-0006243311",
                      "account_holder_name": "REKSA DANA MNC DANA LANCAR"
                    },
                    {
                      "prod_bankacc_key": 2,
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name_alt": "DANA LANCAR",
                      "bank_account_name": "SUB_ACCOUNT - MNC DANA LANCAR",
                      "bank_account_purpose": "SUB_ACCOUNT",
                      "bank_fullname": "BCA",
                      "account_no": "4583008732",
                      "account_holder_name": "REKSA DANA MNC DANA LANCAR"
                    },
                    {
                      "prod_bankacc_key": 3,
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name_alt": "DANA LANCAR",
                      "bank_account_name": "AUTOINVEST_ACC - MNC DANA LANCAR",
                      "bank_account_purpose": "AUTOINVEST_ACC",
                      "bank_fullname": "BCA",
                      "account_no": "458-3008732",
                      "account_holder_name": "REKSA DANA MNC DANA LANCAR"
                    },
                    {
                      "prod_bankacc_key": 4,
                      "product_key": 2,
                      "product_code": "BDM",
                      "product_name_alt": "DANA SYARIAH",
                      "bank_account_name": "SUB_ACCOUNT - MNC DANA SYARIAH",
                      "bank_account_purpose": "SUB_ACCOUNT",
                      "bank_fullname": "BCA",
                      "account_no": "458-2369368",
                      "account_holder_name": "REKSA DANA MNC DANA SYARIAH"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productbankaccount/{key}": {
      "get": {
        "description": "Get Detail Admin Product Bank Account (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Product Bank Account"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "product bank account key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "prod_bankacc_key": 1,
                    "product": {
                      "product_key": 1,
                      "product_code": "BDLC",
                      "product_name": "DANA LANCAR",
                      "product_name_alt": "DANA LANCAR"
                    },
                    "bank": {
                      "bank_key": 31,
                      "bank_code": "MANDIRI",
                      "bank_name": "BANK MANDIRI",
                      "bank_fullname": "BANK MANDIRI"
                    },
                    "account_no": "103-0006243311",
                    "account_holder_name": "REKSA DANA MNC DANA LANCAR",
                    "branch_name": "CABANG JAKARTA GEDUNG BIMANTARA",
                    "currency": {
                      "currency_key": 1,
                      "code": "IDR",
                      "symbol": "Rp",
                      "name": "Indonesia Rupiah",
                      "flag_base": 1
                    },
                    "bank_account_type": {
                      "lookup_key": 129,
                      "lkp_group_key": 27,
                      "lkp_code": "0",
                      "lkp_name": "Saving"
                    },
                    "SwiftCode": "111qqq",
                    "bank_account_name": "SUB_ACCOUNT - MNC DANA LANCAR",
                    "bank_account_purpose": {
                      "lookup_key": 269,
                      "lkp_group_key": 63,
                      "lkp_code": "1",
                      "lkp_name": "SUB_ACCOUNT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productbankaccount/delete": {
      "post": {
        "description": "Delete Product Bank Account Admin : role 15",
        "tags": [
          "Admin Product Bank Account"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productbankaccount/create": {
      "post": {
        "description": "Create Product Bank Account : role 15",
        "tags": [
          "Admin Product Bank Account"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_key": {
                    "type": "integer"
                  },
                  "bank_key": {
                    "type": "integer"
                  },
                  "account_no": {
                    "type": "string"
                  },
                  "account_holder_name": {
                    "type": "string"
                  },
                  "branch_name": {
                    "type": "string"
                  },
                  "currency_key": {
                    "type": "integer"
                  },
                  "bank_account_type": {
                    "type": "integer"
                  },
                  "swift_code": {
                    "type": "string"
                  },
                  "bank_account_name": {
                    "type": "string"
                  },
                  "bank_account_purpose": {
                    "type": "string"
                  }
                },
                "required": [
                  "product_key",
                  "bank_key",
                  "account_no",
                  "account_holder_name",
                  "currency_key",
                  "bank_account_type",
                  "bank_account_name",
                  "bank_account_purpose"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productbankaccount/update": {
      "post": {
        "description": "Update Product Bank Account : role 15",
        "tags": [
          "Admin Product Bank Account"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "product_key": {
                    "type": "integer"
                  },
                  "bank_key": {
                    "type": "integer"
                  },
                  "account_no": {
                    "type": "string"
                  },
                  "account_holder_name": {
                    "type": "string"
                  },
                  "branch_name": {
                    "type": "string"
                  },
                  "currency_key": {
                    "type": "integer"
                  },
                  "bank_account_type": {
                    "type": "integer"
                  },
                  "swift_code": {
                    "type": "string"
                  },
                  "bank_account_name": {
                    "type": "string"
                  },
                  "bank_account_purpose": {
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "product_key",
                  "bank_key",
                  "account_no",
                  "account_holder_name",
                  "currency_key",
                  "bank_account_type",
                  "bank_account_name",
                  "bank_account_purpose"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/productfee/feeitem/{key}": {
      "get": {
        "description": "Get Detail Product Fee Ite, (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Product Fee"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "product fee item key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": null
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/uploadformatsinvest": {
      "post": {
        "description": "Upload Oa Format Sinvest, (User Allowed : RoleKey 13)",
        "tags": [
          "Admin OA Request"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "file"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "product_fee_item_key": 1,
                    "principle_limit": 0,
                    "fee_value": 0,
                    "item_notes": "Tidak dikenakan biaya Subscription"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagementlist": {
      "get": {
        "description": "Get List Admin User Management : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "user_login_key",
                "ucategory_name",
                "user_dept_name",
                "ulogin_name",
                "ulogin_full_name",
                "ulogin_email",
                "role_name",
                "rec_created_date"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search list by LIKE",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role_key",
            "in": "query",
            "description": "Search list by role_key =",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "user_login_key": 7105,
                      "ucategory_name": "User BackOffice HO",
                      "user_dept_name": "Client Admin Dept",
                      "ulogin_name": "yosua.role.15@gmail.com",
                      "ulogin_full_name": "yosua.role.15@gmail.com",
                      "ulogin_email": "yosua.role.15@gmail.com",
                      "is_login": "No",
                      "role_key": 15,
                      "role_name": "IT & SysAdmin",
                      "enabled": "Yes",
                      "locked": "No",
                      "created_date": null
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/logout": {
      "get": {
        "description": "Logout",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/{key}": {
      "get": {
        "description": "Get Detail User Management Admin (User Allowed : RoleKey 15)",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "user login key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "user_login_key": 7,
                    "user_category": {
                      "user_category_key": 1,
                      "ucategory_code": "USR_CUSTOMER",
                      "ucategory_name": "Customer or Visitor",
                      "ucategory_desc": "Daftar Login seluruh customer atau visitor"
                    },
                    "user_dept": {
                      "user_dept_key": 1,
                      "user_dept_code": "PUBLIC",
                      "user_dept_name": "Public Dept",
                      "user_dept_desc": "Sales and Marketing"
                    },
                    "ulogin_name": "yogasutrisna902@gmail.com",
                    "ulogin_full_name": "yogasutrisna902@gmail.com",
                    "ulogin_email": "yogasutrisna902@gmail.com",
                    "role": {
                      "role_key": 1,
                      "role_code": "CUSTOMER_RETAIL",
                      "role_name": "Customer Individu",
                      "role_desc": "Role Individu"
                    },
                    "enabled": true,
                    "locked": false,
                    "verified_email": true,
                    "verified_mobileno": true,
                    "created_date": "03 Nov 2020",
                    "rec_image": "https://devapi.mncasset.com/images/user/7/profile/pRKamVzp6DWwAaBuoiDk.jpg",
                    "no_hp": "08123322213"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/disableenable": {
      "post": {
        "description": "Disable/Enable User : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/lockunlock": {
      "post": {
        "description": "Losk/Unlock User : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolelist": {
      "get": {
        "description": "Get List Role",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fund_type_key",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "role_key": 1,
                      "role_code": "CUSTOMER_RETAIL",
                      "role_name": "Customer Individu",
                      "role_desc": "Role Individu"
                    },
                    {
                      "role_key": 2,
                      "role_code": "CUSTOMER_INSTITUTION",
                      "role_name": "Customer Institusi",
                      "role_desc": "Role Customer Institusi"
                    },
                    {
                      "role_key": 3,
                      "role_code": "CUSTOMER_APERD",
                      "role_name": "Customer APERD",
                      "role_desc": "Role Customer APERD"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usercategorylist": {
      "get": {
        "description": "Get List User Category",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fund_type_key",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "user_category_key": 1,
                      "ucategory_code": "USR_CUSTOMER",
                      "ucategory_name": "Customer or Visitor",
                      "ucategory_desc": "Daftar Login seluruh customer atau visitor"
                    },
                    {
                      "user_category_key": 2,
                      "ucategory_code": "USR_BOHO",
                      "ucategory_name": "User BackOffice HO",
                      "ucategory_desc": "Daftar seluruh user HO"
                    },
                    {
                      "user_category_key": 3,
                      "ucategory_code": "USR_BOBRANCH",
                      "ucategory_name": "User BackOffice Brach",
                      "ucategory_desc": "Daftar seluruh user Branch"
                    },
                    {
                      "user_category_key": 4,
                      "ucategory_code": "USR_APERD",
                      "ucategory_name": "User Selling Agent",
                      "ucategory_desc": "Daftar seluruh user selling agent"
                    },
                    {
                      "user_category_key": 5,
                      "ucategory_code": "USR_FICON",
                      "ucategory_name": "User Financial Consulant",
                      "ucategory_desc": "Daftar seluruh user financial consultan"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/userdeptlist": {
      "get": {
        "description": "Get List User Dept",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "fund_type_key",
                "fund_type_code",
                "fund_type_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "user_dept_key": 1,
                      "user_dept_code": "PUBLIC",
                      "user_dept_name": "Public Dept",
                      "user_dept_desc": "Sales and Marketing"
                    },
                    {
                      "user_dept_key": 2,
                      "user_dept_code": "SALES",
                      "user_dept_name": "Sales and Marketing Dept",
                      "user_dept_desc": "Sales and Marketing"
                    },
                    {
                      "user_dept_key": 3,
                      "user_dept_code": "OPS",
                      "user_dept_name": "Operation Dept",
                      "user_dept_desc": "Operation"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/create": {
      "post": {
        "description": "Create User Management : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_category_key": {
                    "type": "integer"
                  },
                  "user_dept_key": {
                    "type": "integer"
                  },
                  "role_key": {
                    "type": "integer"
                  },
                  "username": {
                    "type": "string"
                  },
                  "ulogin_full_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "no_hp": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "locked": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "user_category_key",
                  "user_dept_key",
                  "role_key",
                  "username",
                  "ulogin_full_name",
                  "password",
                  "enabled",
                  "locked"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/update": {
      "post": {
        "description": "Update User Management : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "user_category_key": {
                    "type": "integer"
                  },
                  "user_dept_key": {
                    "type": "integer"
                  },
                  "role_key": {
                    "type": "integer"
                  },
                  "ulogin_full_name": {
                    "type": "string"
                  },
                  "no_hp": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "verified_email": {
                    "type": "boolean"
                  },
                  "verified_mobileno": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "key",
                  "user_category_key",
                  "user_dept_key",
                  "role_key",
                  "ulogin_full_name",
                  "enabled",
                  "locked",
                  "verified_email",
                  "verified_mobileno"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/changepassword": {
      "post": {
        "description": "Update Password User Management : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/changerole": {
      "post": {
        "description": "Update Role User Management : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "role_key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key",
                  "role_key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/typelist": {
      "get": {
        "description": "Get All CMS Post Type",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_type_key",
                "post_type_code",
                "post_type_name",
                "post_type_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 5,
                  "data": [
                    {
                      "post_type_key": 1,
                      "post_type_code": "BANNER",
                      "post_type_name": "Jumbotron",
                      "post_type_desc": "Poster atau Banner di halaman HOME"
                    },
                    {
                      "post_type_key": 2,
                      "post_type_code": "GUIDANCE",
                      "post_type_name": "Panduan Investasi",
                      "post_type_desc": "Panduan Investasi"
                    },
                    {
                      "post_type_key": 3,
                      "post_type_code": "NEWS",
                      "post_type_name": "News",
                      "post_type_desc": "Berbagai berita-berita"
                    },
                    {
                      "post_type_key": 4,
                      "post_type_code": "MarketOutLook",
                      "post_type_name": "Market Out Look",
                      "post_type_desc": "Content mengenai outlook pasar atau analisa"
                    },
                    {
                      "post_type_key": 5,
                      "post_type_code": "PROMOSI",
                      "post_type_name": "Promotion Related",
                      "post_type_desc": "Content mengenai Promosi"
                    },
                    {
                      "post_type_key": 6,
                      "post_type_code": "DICTIONARY",
                      "post_type_name": "Kamus Investasi",
                      "post_type_desc": "Istilah-istilah mengenai investasi atau pasar modal"
                    },
                    {
                      "post_type_key": 7,
                      "post_type_code": "TNC",
                      "post_type_name": "Term and Condition",
                      "post_type_desc": "Content mengenai TnC/Disclaimmer etc."
                    },
                    {
                      "post_type_key": 8,
                      "post_type_code": "FAQ",
                      "post_type_name": "Pertanyaan yang sering",
                      "post_type_desc": "Pertanyaan yang sering ditanyakan orang pada umumnya... etc."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/subtypelist": {
      "get": {
        "description": "Get All CMS Post Subtype",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "post_subtype_key",
                "post_subtype_code",
                "post_subtype_name"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 5,
                  "data": [
                    {
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner"
                    },
                    {
                      "post_subtype_key": 2,
                      "post_subtype_code": "POSTER_SMALL",
                      "post_subtype_name": "Banner Kecil"
                    },
                    {
                      "post_subtype_key": 3,
                      "post_subtype_code": "POSTER_PARTNER",
                      "post_subtype_name": "Banner Partner Business"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/subtypelist/{post_type}": {
      "get": {
        "description": "Get All CMS Post Subtype by post_type_key",
        "tags": [
          "Admin CMS Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "post_type",
            "in": "path",
            "description": "product key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 5,
                  "data": [
                    {
                      "post_subtype_key": 1,
                      "post_subtype_code": "JUMBOTRON",
                      "post_subtype_name": "Top Home Banner"
                    },
                    {
                      "post_subtype_key": 2,
                      "post_subtype_code": "POSTER_SMALL",
                      "post_subtype_name": "Banner Kecil"
                    },
                    {
                      "post_subtype_key": 3,
                      "post_subtype_code": "POSTER_PARTNER",
                      "post_subtype_name": "Banner Partner Business"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/usermanagement/delete": {
      "post": {
        "description": "Delete User : role 15",
        "tags": [
          "Admin User Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagementlist": {
      "get": {
        "description": "Get List Admin Role Management : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "role_key",
                "role_category_code",
                "role_category_name",
                "role_code",
                "role_name",
                "role_desc"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search list by LIKE",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "role_key": 1,
                      "role_category_code": "CUSTOMER",
                      "role_category_name": "Customer",
                      "role_category_key": null,
                      "role_code": "CUSTOMER_RETAIL",
                      "role_name": "Customer Individu",
                      "role_desc": "Role Individu"
                    },
                    {
                      "role_key": 2,
                      "role_category_code": "CUSTOMER",
                      "role_category_name": "Customer",
                      "role_category_key": null,
                      "role_code": "CUSTOMER_INSTITUTION",
                      "role_name": "Customer Institusi",
                      "role_desc": "Role Customer Institusi"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/userlist": {
      "get": {
        "description": "Get List User in Admin Role Management detail/create/update : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ulogin_name",
                "ulogin_full_name",
                "ulogin_email"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "role_key",
            "in": "query",
            "description": "role_key. if create = value string kosong, if detail / update = value role_key",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "ulogin_name": "yosua.role.1515@gmail.com",
                      "ulogin_full_name": "yosua.role.1515@gmail.com",
                      "ulogin_email": "yosua.role.1515@gmail.com"
                    },
                    {
                      "ulogin_name": "yosua.role.15@gmail.com",
                      "ulogin_full_name": "yosua.role.15@gmail.com",
                      "ulogin_email": "yosua.role.15@gmail.com"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/{key}": {
      "get": {
        "description": "Get Detail Role Management Admin (User Allowed : RoleKey 15)",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "role key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": {
                    "role_key": 15,
                    "role_category": {
                      "role_category_key": 3,
                      "role_category_code": "BO_OFFICER",
                      "role_category_name": "Back Office",
                      "role_category_desc": "Category Role BackOffice"
                    },
                    "role_code": "HO_IT",
                    "role_name": "IT & SysAdmin",
                    "role_desc": "Role IT or System Adminitratior"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/menulist": {
      "get": {
        "description": "Get List Menu in Admin Role Management detail/create/update : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "role_key",
            "in": "query",
            "description": "role_key. if create = value string kosong, if detail / update = value role_key",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "menu_key": 5,
                      "module_name": "CMS Menu",
                      "menu_name": "CMS",
                      "menu_desc": "Content Management System",
                      "child_menu": [
                        {
                          "menu_key": 6,
                          "menu_name": "Banner",
                          "menu_desc": "Banner Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 7,
                          "menu_name": "News",
                          "menu_desc": "News Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 8,
                          "menu_name": "Guidance",
                          "menu_desc": "Guidance Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 9,
                          "menu_name": "TNC",
                          "menu_desc": "TNC Management (Registrasi Login, OA, Umum)",
                          "is_checked": false
                        },
                        {
                          "menu_key": 10,
                          "menu_name": "Dictionary",
                          "menu_desc": "Dictionary Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 11,
                          "menu_name": "FAQ",
                          "menu_desc": "FAQ Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 12,
                          "menu_name": "Quiz",
                          "menu_desc": "Question or Quiz Management",
                          "is_checked": false
                        },
                        {
                          "menu_key": 13,
                          "menu_name": "Buziness Partner",
                          "menu_desc": "Link bisnis partner untuk hasil calculator",
                          "is_checked": false
                        },
                        {
                          "menu_key": 14,
                          "menu_name": "Product FFS",
                          "menu_desc": "Fasilitas Upload link ffs. Ini akan terbit setiap awal bulan",
                          "is_checked": false
                        }
                      ]
                    },
                    {
                      "menu_key": 16,
                      "module_name": "LOGIN",
                      "menu_name": "DASHBOARD",
                      "menu_desc": "DASHBOARD",
                      "child_menu": [
                        {
                          "menu_key": 17,
                          "menu_name": "Branch Dashboard",
                          "menu_desc": "Dashboard Cabang",
                          "is_checked": false
                        },
                        {
                          "menu_key": 18,
                          "menu_name": "Dashboard HO1",
                          "menu_desc": "Dashboard HO-1",
                          "is_checked": false
                        }
                      ]
                    },
                    {
                      "menu_key": 20,
                      "module_name": "APERD",
                      "menu_name": "CUSTOMER",
                      "menu_desc": "CUSTOMER",
                      "child_menu": [
                        {
                          "menu_key": 24,
                          "menu_name": "Inquiry Customer Retail",
                          "menu_desc": "Menu inquiry nasabah Retail",
                          "is_checked": false
                        },
                        {
                          "menu_key": 28,
                          "menu_name": "KYC File Download",
                          "menu_desc": "Menu untuk membuat File KYC untuk SINVEST : Individu dan Institusi terpisah",
                          "is_checked": false
                        },
                        {
                          "menu_key": 29,
                          "menu_name": "KYC File Upload",
                          "menu_desc": "Menu untuk mengupload Fiel KYC dari SINVEST. Ini akan mengisi nomor SID dan IFUA",
                          "is_checked": false
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/rolecategorylist": {
      "get": {
        "description": "Get List Role Category in Admin Role Management detail/create/update : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order By",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ulogin_name",
                "ulogin_full_name",
                "ulogin_email"
              ]
            }
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Order Type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post (max 100 or choose no limit)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nolimit",
            "in": "query",
            "description": "Ignore limit and page",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "pagination": 1,
                  "data": [
                    {
                      "role_category_key": 1,
                      "role_category_code": "CUSTOMER",
                      "role_category_name": "Customer",
                      "role_category_desc": "Category Role Customer"
                    },
                    {
                      "role_category_key": 2,
                      "role_category_code": "MAM_API",
                      "role_category_name": "MAM API",
                      "role_category_desc": "Category Role API"
                    },
                    {
                      "role_category_key": 3,
                      "role_category_code": "BO_OFFICER",
                      "role_category_name": "Back Office",
                      "role_category_desc": "Category Role BackOffice"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "example": "Token not found"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/delete": {
      "post": {
        "description": "Delete Role : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/create": {
      "post": {
        "description": "Create Role Management : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_category_key": {
                    "type": "integer"
                  },
                  "role_code": {
                    "type": "string"
                  },
                  "role_name": {
                    "type": "string"
                  },
                  "role_desc": {
                    "type": "string"
                  },
                  "menu_ids": {
                    "type": "string",
                    "example": "1,2,3,4,5,6"
                  }
                },
                "required": [
                  "role_category_key",
                  "role_code",
                  "role_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    },
    "/admin/rolemanagement/update": {
      "post": {
        "description": "Create Role Management : role 15",
        "tags": [
          "Admin Role Management"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "role_category_key": {
                    "type": "integer"
                  },
                  "role_code": {
                    "type": "string"
                  },
                  "role_name": {
                    "type": "string"
                  },
                  "role_desc": {
                    "type": "string"
                  },
                  "menu_ids": {
                    "type": "string",
                    "example": "1,2,3,4,5,6"
                  }
                },
                "required": [
                  "key",
                  "role_category_key",
                  "role_code",
                  "role_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "code": 200,
                    "message_server": "OK",
                    "message_client": "OK"
                  },
                  "data": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "Missing required parameter"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "example": "Error parsing data"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Custom"
      }
    },
    "schemas": {
      "quiz": {
        "properties": {
          "request_key": {
            "type": "string"
          },
          "quiz": {
            "type": "array",
            "items": "object"
          }
        }
      }
    }
  }
}